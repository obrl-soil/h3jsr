[{"path":"https://obrl-soil.github.io/h3jsr/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"Apache License","title":"Apache License","text":"Version 2.0, January 2004 <http://www.apache.org/licenses/>","code":""},{"path":[]},{"path":"https://obrl-soil.github.io/h3jsr/LICENSE.html","id":"1-definitions","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"1. Definitions","title":"Apache License","text":"“License” shall mean terms conditions use, reproduction, distribution defined Sections 1 9 document. “Licensor” shall mean copyright owner entity authorized copyright owner granting License. “Legal Entity” shall mean union acting entity entities control, controlled , common control entity. purposes definition, “control” means () power, direct indirect, cause direction management entity, whether contract otherwise, (ii) ownership fifty percent (50%) outstanding shares, (iii) beneficial ownership entity. “” (“”) shall mean individual Legal Entity exercising permissions granted License. “Source” form shall mean preferred form making modifications, including limited software source code, documentation source, configuration files. “Object” form shall mean form resulting mechanical transformation translation Source form, including limited compiled object code, generated documentation, conversions media types. “Work” shall mean work authorship, whether Source Object form, made available License, indicated copyright notice included attached work (example provided Appendix ). “Derivative Works” shall mean work, whether Source Object form, based (derived ) Work editorial revisions, annotations, elaborations, modifications represent, whole, original work authorship. purposes License, Derivative Works shall include works remain separable , merely link (bind name) interfaces , Work Derivative Works thereof. “Contribution” shall mean work authorship, including original version Work modifications additions Work Derivative Works thereof, intentionally submitted Licensor inclusion Work copyright owner individual Legal Entity authorized submit behalf copyright owner. purposes definition, “submitted” means form electronic, verbal, written communication sent Licensor representatives, including limited communication electronic mailing lists, source code control systems, issue tracking systems managed , behalf , Licensor purpose discussing improving Work, excluding communication conspicuously marked otherwise designated writing copyright owner “Contribution.” “Contributor” shall mean Licensor individual Legal Entity behalf Contribution received Licensor subsequently incorporated within Work.","code":""},{"path":"https://obrl-soil.github.io/h3jsr/LICENSE.html","id":"2-grant-of-copyright-license","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"2. Grant of Copyright License","title":"Apache License","text":"Subject terms conditions License, Contributor hereby grants perpetual, worldwide, non-exclusive, -charge, royalty-free, irrevocable copyright license reproduce, prepare Derivative Works , publicly display, publicly perform, sublicense, distribute Work Derivative Works Source Object form.","code":""},{"path":"https://obrl-soil.github.io/h3jsr/LICENSE.html","id":"3-grant-of-patent-license","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"3. Grant of Patent License","title":"Apache License","text":"Subject terms conditions License, Contributor hereby grants perpetual, worldwide, non-exclusive, -charge, royalty-free, irrevocable (except stated section) patent license make, made, use, offer sell, sell, import, otherwise transfer Work, license applies patent claims licensable Contributor necessarily infringed Contribution(s) alone combination Contribution(s) Work Contribution(s) submitted. institute patent litigation entity (including cross-claim counterclaim lawsuit) alleging Work Contribution incorporated within Work constitutes direct contributory patent infringement, patent licenses granted License Work shall terminate date litigation filed.","code":""},{"path":"https://obrl-soil.github.io/h3jsr/LICENSE.html","id":"4-redistribution","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"4. Redistribution","title":"Apache License","text":"may reproduce distribute copies Work Derivative Works thereof medium, without modifications, Source Object form, provided meet following conditions: () must give recipients Work Derivative Works copy License; (b) must cause modified files carry prominent notices stating changed files; (c) must retain, Source form Derivative Works distribute, copyright, patent, trademark, attribution notices Source form Work, excluding notices pertain part Derivative Works; (d) Work includes “NOTICE” text file part distribution, Derivative Works distribute must include readable copy attribution notices contained within NOTICE file, excluding notices pertain part Derivative Works, least one following places: within NOTICE text file distributed part Derivative Works; within Source form documentation, provided along Derivative Works; , within display generated Derivative Works, wherever third-party notices normally appear. contents NOTICE file informational purposes modify License. may add attribution notices within Derivative Works distribute, alongside addendum NOTICE text Work, provided additional attribution notices construed modifying License. may add copyright statement modifications may provide additional different license terms conditions use, reproduction, distribution modifications, Derivative Works whole, provided use, reproduction, distribution Work otherwise complies conditions stated License.","code":""},{"path":"https://obrl-soil.github.io/h3jsr/LICENSE.html","id":"5-submission-of-contributions","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"5. Submission of Contributions","title":"Apache License","text":"Unless explicitly state otherwise, Contribution intentionally submitted inclusion Work Licensor shall terms conditions License, without additional terms conditions. Notwithstanding , nothing herein shall supersede modify terms separate license agreement may executed Licensor regarding Contributions.","code":""},{"path":"https://obrl-soil.github.io/h3jsr/LICENSE.html","id":"6-trademarks","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"6. Trademarks","title":"Apache License","text":"License grant permission use trade names, trademarks, service marks, product names Licensor, except required reasonable customary use describing origin Work reproducing content NOTICE file.","code":""},{"path":"https://obrl-soil.github.io/h3jsr/LICENSE.html","id":"7-disclaimer-of-warranty","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"7. Disclaimer of Warranty","title":"Apache License","text":"Unless required applicable law agreed writing, Licensor provides Work (Contributor provides Contributions) “” BASIS, WITHOUT WARRANTIES CONDITIONS KIND, either express implied, including, without limitation, warranties conditions TITLE, NON-INFRINGEMENT, MERCHANTABILITY, FITNESS PARTICULAR PURPOSE. solely responsible determining appropriateness using redistributing Work assume risks associated exercise permissions License.","code":""},{"path":"https://obrl-soil.github.io/h3jsr/LICENSE.html","id":"8-limitation-of-liability","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"8. Limitation of Liability","title":"Apache License","text":"event legal theory, whether tort (including negligence), contract, otherwise, unless required applicable law (deliberate grossly negligent acts) agreed writing, shall Contributor liable damages, including direct, indirect, special, incidental, consequential damages character arising result License use inability use Work (including limited damages loss goodwill, work stoppage, computer failure malfunction, commercial damages losses), even Contributor advised possibility damages.","code":""},{"path":"https://obrl-soil.github.io/h3jsr/LICENSE.html","id":"9-accepting-warranty-or-additional-liability","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"9. Accepting Warranty or Additional Liability","title":"Apache License","text":"redistributing Work Derivative Works thereof, may choose offer, charge fee , acceptance support, warranty, indemnity, liability obligations /rights consistent License. However, accepting obligations, may act behalf sole responsibility, behalf Contributor, agree indemnify, defend, hold Contributor harmless liability incurred , claims asserted , Contributor reason accepting warranty additional liability. END TERMS CONDITIONS","code":""},{"path":"https://obrl-soil.github.io/h3jsr/LICENSE.html","id":"appendix-how-to-apply-the-apache-license-to-your-work","dir":"","previous_headings":"","what":"APPENDIX: How to apply the Apache License to your work","title":"Apache License","text":"apply Apache License work, attach following boilerplate notice, fields enclosed brackets [] replaced identifying information. (Don’t include brackets!) text enclosed appropriate comment syntax file format. also recommend file class name description purpose included “printed page” copyright notice easier identification within third-party archives.","code":"Copyright 2021 Lauren O'Brien  Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at    http://www.apache.org/licenses/LICENSE-2.0  Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License."},{"path":"https://obrl-soil.github.io/h3jsr/articles/intro-to-h3jsr.html","id":"general-information","dir":"Articles","previous_headings":"","what":"General information","title":"Introduction to h3jsr","text":"h3jsr connects Uber’s H3 geospatial library R, via transpiled JavaScript implementation,h3-js. library extensive potential applications network analysis, trip routing, geospatial data aggregation. wrapper functions provided intended interface well existing R-spatial ecosystem, particularly sf. Documentation core H3 library H3’s github page. core library understands WGS84 coordinates, multiple projection support limited. spatial objects returned WGS84, ideally supplied . ’s always safer spatial transformations verify results. spatial data coordinate system WGS84 supplied, transformed using sf::st_transform() message issued. function h3jsr, default behaviour return data simple structure practical, always option return complex-object containing input output data, appropriate function question. package uses V8 interface h3-js. , lot overhead function call related sending data V8 via JSON conversion. Feeding large datasets often gives faster results one might expect toy examples . Avoid using functions conjunction e.g. base::lapply purrr::map individual geometries!","code":""},{"path":"https://obrl-soil.github.io/h3jsr/articles/intro-to-h3jsr.html","id":"core-functions","dir":"Articles","previous_headings":"","what":"Core Functions","title":"Introduction to h3jsr","text":"Nine core functions exist - three translating spatial data H3 system, six information utilities, including address validity checker. point_to_cell() takes sf-style point data return address point falls . can extract addresses one resolution many. function also accept matrix data frame input, work columns 1 2 contain WGS84 longitude latitude values, respectively. default, character vector returned single resolution, data frame multiple resolutions requested. simple = FALSE input object inherits data.frame, data frame object returned new attribute column resolution requested. H3 addresses can translated back point given resolution cell_to_point(). polygon (almost always hexagon), can retrieved cell_to_polygon().  Hopefully plot gives sense large scale changes resolution levels - level seven times detailed last. H3 address validity checks done is_valid(): can check whether address refers one pentagons occur icosahedron corners resolution is_pentagon(). relevant subsequent area distance calculations carried . pentagon indices given resolution can identified using get_pentagons().  is_rc3() checks whether H3 address resolution Class III orientation. refers orientation hex grid relative next coarser resolution. number base (resolution-0) cell H3 address can retrieved get_base_cell(). run 0 North Pole 121 South. triangular icosahedron face (faces) cell belongs can also retrieved get_faces(). run 1-20, North South. Lastly, resolution H3 address can retrieved get_res().","code":"# This is the location of the Brisbane Town Hall: bth <- sf::st_sfc(sf::st_point(c(153.023503, -27.468920)), crs = 4326)  # where is the Brisbane Town Hall at resolution 15? point_to_cell(bth, res = 15) #> [1] \"8fbe8d12acad2f3\" nc <- st_read(system.file(\"shape/nc.shp\", package=\"sf\"), quiet = TRUE) nc_pts <- st_centroid(nc) nc_pts <- st_transform(nc_pts, crs = 4326) nc_pts <- dplyr::select(nc_pts, CNTY_ID, NAME)  # Give me the address for the center of each NC county at every resolution nc_all_res <- point_to_cell(nc_pts, res = seq(0, 15), simple = FALSE) head(nc_all_res[, c(1:5)]) #>   CNTY_ID        NAME h3_resolution_0 h3_resolution_1 h3_resolution_2 #> 1    1825        Ashe 802bfffffffffff 812abffffffffff 8244dffffffffff #> 2    1827   Alleghany 802bfffffffffff 812abffffffffff 8244dffffffffff #> 3    1828       Surry 802bfffffffffff 812abffffffffff 822a8ffffffffff #> 4    1831   Currituck 802bfffffffffff 812afffffffffff 822af7fffffffff #> 5    1832 Northampton 802bfffffffffff 812afffffffffff 822af7fffffffff #> 6    1833    Hertford 802bfffffffffff 812afffffffffff 822af7fffffffff # plot a few ashe_hexes <- unlist(nc_all_res[1, c(6,7,8,9,10)], use.names = FALSE) ashe_hexes <- cell_to_polygon(ashe_hexes, simple = FALSE) ggplot(nc[1,]) +   geom_sf(fill = NA, colour = 'black') +   geom_sf(data = ashe_hexes, aes(fill = h3_address), alpha = 0.5) +   scale_fill_viridis_d() +   ggtitle('H3 hexagons over County Ashe, NC', subtitle = 'Resolutions 6-10') +   theme_minimal() +   coord_sf() is_valid(h3_address = '8abe8d12acaffff') #> [1] TRUE is_valid(h3_address = '8abe8d12aca') #> [1] FALSE # is the following address a pentagon? is_pentagon(h3_address = '8abe8d12acaffff') #> [1] FALSE  get_pentagons(res = 8) #> [[1]] #>  [1] \"8808000001fffff\" \"881c000001fffff\" \"8830000001fffff\" \"884c000001fffff\" #>  [5] \"8862000001fffff\" \"8874000001fffff\" \"887e000001fffff\" \"8890000001fffff\" #>  [9] \"88a6000001fffff\" \"88c2000001fffff\" \"88d6000001fffff\" \"88ea000001fffff\"  ggplot() +   geom_sf(data = cell_to_polygon(get_pentagons(8)[[1]][1]), fill = NA) +   theme_void() is_rc3(h3_address = '8abe8d12acaffff') #> [1] FALSE get_base_cell(h3_address = '8abe8d12acaffff') #> [1] 95 get_faces(h3_address = '8abe8d12acaffff') #> [1] 15 get_res(h3_address = '8abe8d12acaffff') #> [1] 10"},{"path":"https://obrl-soil.github.io/h3jsr/articles/intro-to-h3jsr.html","id":"neighbour-algorithms","dir":"Articles","previous_headings":"","what":"Neighbour Algorithms","title":"Introduction to h3jsr","text":"H3 grid system hierarchical, addresses parents children. parent address one contains given address coarser resolution. child address contained given address. Parents children can requested resolution input, respectively.  number addresses returned request 7 ^ (parent_res - child_res), jumping three levels return 343 addresses single input, ’s 41 kb. return central child given address, use get_centerchild():  Within resolution, addresses within n ‘steps’ central address (‘patch’ hexagons) can retrieved get_disk() get_disk_list(). latter function returns output addresses listed separately step away input. input address included output. ring addresses exactly n steps obtained get_ring(). address lists can spatialised cell_to_multipolygon(), returns polygonised outline collection H3 addresses.  may interesting use cell_to_polygon()   polygon_to_cells() return h3 addresses whose centers intersect given polygon. Multipolygons supported well.  representation like can ‘compacted’ compact().  Note orientation shift resolution change. compacted representation can uncompacted back resolution uncompact(), loss chosen resolution detailed original polygon_to_cells() operation.","code":"# input is res 10: get_parent(h3_address = '8abe8d12acaffff', res = 6) #> [1] \"86be8d12fffffff\" # input is res 6: get_children(h3_address = '86be8d12fffffff', res = 7) #> [[1]] #> [1] \"87be8d128ffffff\" \"87be8d129ffffff\" \"87be8d12affffff\" \"87be8d12bffffff\" #> [5] \"87be8d12cffffff\" \"87be8d12dffffff\" \"87be8d12effffff\"  ggplot() +   geom_sf(data = cell_to_polygon('86be8d12fffffff'), fill = NA) +   geom_sf(data = cell_to_polygon(get_children(h3_address = '86be8d12fffffff',                                             res = 7)[[1]]),           fill = 'red', alpha = 0.5 ) +   theme_void() # input is res 6: get_centerchild(h3_address = '86be8d12fffffff', res = 7) #> [1] \"87be8d128ffffff\"  ggplot() +   geom_sf(data = cell_to_polygon('86be8d12fffffff'), fill = NA) +   geom_sf(data = cell_to_polygon(get_centerchild('86be8d12fffffff', 7)),           fill = 'red') +   geom_sf(data = cell_to_polygon(get_centerchild('86be8d12fffffff', 8)),           fill = 'blue') +     theme_void() get_disk(h3_address = '86be8d12fffffff', ring_size = 2) #> [[1]] #>  [1] \"86be8d12fffffff\" \"86be8d127ffffff\" \"86be8d107ffffff\" \"86be8d10fffffff\" #>  [5] \"86be8d177ffffff\" \"86be8d8dfffffff\" \"86be8d8d7ffffff\" \"86be8d88fffffff\" #>  [9] \"86be8d89fffffff\" \"86be8d137ffffff\" \"86be8d117ffffff\" \"86be8d11fffffff\" #> [13] \"86be8d027ffffff\" \"86be8d157ffffff\" \"86be8d147ffffff\" \"86be8d167ffffff\" #> [17] \"86be8d8cfffffff\" \"86be8d8c7ffffff\" \"86be8d8f7ffffff\"  get_disk_list(h3_address = '86be8d12fffffff', ring_size = 2) #> [[1]] #> [[1]][[1]] #> [1] \"86be8d12fffffff\" #>  #> [[1]][[2]] #> [1] \"86be8d127ffffff\" \"86be8d107ffffff\" \"86be8d10fffffff\" \"86be8d177ffffff\" #> [5] \"86be8d8dfffffff\" \"86be8d8d7ffffff\" #>  #> [[1]][[3]] #>  [1] \"86be8d88fffffff\" \"86be8d89fffffff\" \"86be8d137ffffff\" \"86be8d117ffffff\" #>  [5] \"86be8d11fffffff\" \"86be8d027ffffff\" \"86be8d157ffffff\" \"86be8d147ffffff\" #>  [9] \"86be8d167ffffff\" \"86be8d8cfffffff\" \"86be8d8c7ffffff\" \"86be8d8f7ffffff\" get_ring(h3_address = '86be8d12fffffff', ring_size = 2) #> [[1]] #>  [1] \"86be8d8f7ffffff\" \"86be8d88fffffff\" \"86be8d89fffffff\" \"86be8d137ffffff\" #>  [5] \"86be8d117ffffff\" \"86be8d11fffffff\" \"86be8d027ffffff\" \"86be8d157ffffff\" #>  [9] \"86be8d147ffffff\" \"86be8d167ffffff\" \"86be8d8cfffffff\" \"86be8d8c7ffffff\" disk <- get_disk(h3_address = '86be8d12fffffff', ring_size = 2)  ring <- get_ring(h3_address = '86be8d12fffffff', ring_size = 5)  patch_sf <- cells_to_multipolygon(disk, simple = FALSE) donut_sf <- cells_to_multipolygon(ring, simple = FALSE)  ggplot() +   geom_sf(data = patch_sf, alpha = 0.5) +   theme_minimal() +   geom_sf(data = donut_sf, alpha = 0.5, fill = 'red') +   theme_void() disk_singles <- cell_to_polygon(unlist(disk, use.names = FALSE), simple = FALSE) ring_singles <- cell_to_polygon(unlist(ring, use.names = FALSE), simple = FALSE)  ggplot(disk_singles) +   geom_sf(aes(fill = 1:nrow(disk_singles)), show.legend = FALSE) +   scale_fill_viridis_c() +   theme_minimal() +   theme_void() ggplot(ring_singles) +   geom_sf(aes(fill = 1:nrow(ring_singles)), show.legend = FALSE) +   scale_fill_viridis_c() +   theme_minimal() +   theme_void() ashe <- st_transform(nc[1, ], crs = 4326) ashe_7 <- polygon_to_cells(ashe, res = 7, simple = FALSE) ashe_7 <- cell_to_polygon(unlist(ashe_7$h3_addresses), simple = FALSE)  ggplot() +   geom_sf(data = ashe, fill = NA) +   geom_sf(data = ashe_7, fill = NA, colour = 'red') +   ggtitle('Resolution 7 hexagons', subtitle = 'County Ashe, NC') +   theme_minimal() +   coord_sf() ashe_comp <- compact(ashe_7$h3_address) ashe_comp <- cell_to_polygon(ashe_comp, simple = FALSE)  ggplot() +   geom_sf(data = ashe, fill = NA) +   geom_sf(data = ashe_comp, fill = NA, colour = 'red') +   ggtitle('Compacted hexes from resolution 7', subtitle = 'County Ashe, NC') +   theme_minimal() +   coord_sf() ashe_comp <- compact(ashe_7$h3_address) ashe_uncomp <- uncompact(ashe_comp, res = 8)  ashe_uncomp <- cell_to_polygon(ashe_uncomp, simple = FALSE)  ggplot() +   geom_sf(data = ashe, fill = NA) +   geom_sf(data = ashe_uncomp, fill = NA, colour = 'red') +   theme_minimal() +   ggtitle('Uncompacted hexes to resolution 8', subtitle = 'County Ashe, NC') +   coord_sf()"},{"path":"https://obrl-soil.github.io/h3jsr/articles/intro-to-h3jsr.html","id":"unidirectional-edges","dir":"Articles","previous_headings":"","what":"Unidirectional edges","title":"Introduction to h3jsr","text":"check whether two H3 addresses share edge, use are_neighbours():  H3 system can also generate addresses hex edges. get address representing edge adjacent H3 addresses, use get_udedge(). Note resultant address looks little different, validity checking function, is_valid_edge(): edge address can also used retrieve origin destination hex addresses, separately together: get edges given H3 address, use get_udedges(). Edges can converted sfc_LINESTRING geometries udedge_to_line():","code":"# Are the following addresses neighbours? are_neighbours(origin = '86be8d12fffffff', destination = '86be8d127ffffff') #> [1] TRUE  are_neighbours(origin = '86be8d12fffffff', destination = '86be8d147ffffff') #> [1] FALSE  ggplot() +   geom_sf(data = cell_to_polygon(c('86be8d12fffffff')),           fill = c('red'), alpha =  0.5) +   geom_sf(data = cell_to_polygon(c('86be8d127ffffff')),           fill = c('blue'), alpha =  0.5) +       geom_sf(data = cell_to_polygon(c('86be8d147ffffff')),           fill = c('green'), alpha =  0.5) +     theme_void() # Get me the edge between these two addresses get_udedge(origin = '86be8d12fffffff', destination = '86be8d127ffffff') #> [1] \"166be8d12fffffff\"  is_valid_edge('166be8d12fffffff') #> [1] TRUE  # not neighbours: #get_udedge(origin = '86be8d12fffffff', destination = '86be8d147ffffff') get_udorigin(h3_edge = '166be8d12fffffff') #> [1] \"86be8d12fffffff\"  get_uddest(h3_edge = '166be8d12fffffff') #> [1] \"86be8d127ffffff\"  get_udends(h3_edge = '166be8d12fffffff') #> [[1]] #> [1] \"86be8d12fffffff\" \"86be8d127ffffff\" get_udedges(h3_address = '86be8d12fffffff') #> [[1]] #> [1] \"116be8d12fffffff\" \"126be8d12fffffff\" \"136be8d12fffffff\" \"146be8d12fffffff\" #> [5] \"156be8d12fffffff\" \"166be8d12fffffff\"  ggplot() +   geom_sf(data = cell_to_polygon('86be8d12fffffff'), col = NA) +   geom_sf(data = udedge_to_line(get_udedges(h3_address = '86be8d12fffffff')[[1]]),           aes(col = seq(6)), size = 2, show.legend = FALSE) +   scale_color_viridis_c() +   theme_void()"},{"path":"https://obrl-soil.github.io/h3jsr/articles/intro-to-h3jsr.html","id":"vertexes","dir":"Articles","previous_headings":"","what":"Vertexes","title":"Introduction to h3jsr","text":"H3 v4.0+ can return addresses cell corner vertices, validity checker.","code":"vtx0 <- vertex_to_point(get_cell_vertex('86be8d12fffffff', 0), simple = FALSE) vtxs <- vertex_to_point(get_cell_vertexes('86be8d12fffffff')[[1]], simple = FALSE) poly <- cell_to_polygon('86be8d12fffffff', simple = FALSE) is_valid_vertex(get_cell_vertex('86be8d12fffffff', 0)) #> [1] TRUE  ggplot() +   geom_sf(data = poly, col = NA) +   geom_sf(data = vtxs, aes(col = seq(6)), size = 3, show.legend = FALSE) +   geom_sf(data = vtx0, col = 'red', size = 5, pch = 1, show.legend = FALSE) +   scale_color_viridis_c() +   theme_void()"},{"path":"https://obrl-soil.github.io/h3jsr/articles/intro-to-h3jsr.html","id":"local-coordinates","dir":"Articles","previous_headings":"","what":"Local coordinates","title":"Introduction to h3jsr","text":"Functions get_local_ij() get_local_h3() can used map H3 addresses 2-axis coordinate space, relative given origin address. functions experimental likely change future.","code":"local <- get_local_ij(origin = '86be8d12fffffff',                        destination = '86be8d127ffffff')  get_local_cell(origin = '86be8d12fffffff', i = local[, 1], j = local[, 2]) #> [1] \"86be8d127ffffff\""},{"path":"https://obrl-soil.github.io/h3jsr/articles/intro-to-h3jsr.html","id":"distance-and-direction","dir":"Articles","previous_headings":"","what":"Distance and Direction","title":"Introduction to h3jsr","text":"Within context H3 grid system, functions grid_distance() grid_path() provide ‘navigational’ functionality. grid_distance() report many steps grid required travel one address another. grid_path() return list addresses traverse shortest path. Note multiple minimum-step pathways possible many sets addresses, function return one consistently. Note functions work grid cells resolution. great-circle distance two points (e.g. cell centers) can also calculated get_dist(), using Haversine formula. cell_to_line() custom function provided largely make easy spatialise results grid_path(). take list h3 addresses, convert points, turn set points sfc_LINESTRING object. function flexible enough work across arbitrary set addresses (including addresses multiple resolutions), untested results may strange.","code":"nc_pts <- sf::st_centroid(nc[c(1, 2), ]) nc_6 <- point_to_cell(nc_pts, res = 6) # how far apart are these two addresses? grid_distance(nc_6[1], nc_6[2]) #> [1] 6  # find a path between these two addresses: path <- grid_path(nc_6[1], nc_6[2], simple = TRUE) path #> [[1]] #> [1] \"862a9935fffffff\" \"862a9934fffffff\" \"862a9936fffffff\" \"8644db267ffffff\" #> [5] \"8644db277ffffff\" \"8644db257ffffff\" \"8644db2e7ffffff\" state_line <- cell_to_line(path)  ggplot() +   geom_sf(data = nc[c(1,2), ], fill = NA) +   geom_sf(data = sf::st_centroid(nc[c(1,2), ]), pch = 19, size = 2) +   geom_sf(data = cell_to_point(nc_6), pch = 19, size = 2, col = 'red') +   geom_sf(data = cell_to_polygon(nc_6), fill = NA) +   geom_sf(data = state_line, fill = NA, colour = 'red') +   theme_minimal() +   ggtitle('Counties Ashe and Alleghany, NC', subtitle = 'Line connecting hexagons containing centroids at resolution 6') +   coord_sf()"},{"path":"https://obrl-soil.github.io/h3jsr/articles/intro-to-h3jsr.html","id":"info-utilities","dir":"Articles","previous_headings":"","what":"Info utilities","title":"Introduction to h3jsr","text":"set general information utilities give information characteristics hexagons resolution. includes average area, average edge length, average distance hexagon centers, total number addresses. data stored locally can also calculated source. exact area particular cells length edges can also calculated:","code":"res_area(6, 'km2') #> [1] 36.12906  res_length(6, 'km') #> [1] 3.229483  res_cendist(6, 'km') #> [1] 5.593628  num_cells(6) #> [1] 14117882  data(\"h3_info_table\") str(h3_info_table) #> 'data.frame':    16 obs. of  8 variables: #>  $ h3_resolution       : int  0 1 2 3 4 5 6 7 8 9 ... #>  $ avg_area_sqm        : num  4.36e+12 6.10e+11 8.68e+10 1.24e+10 1.77e+09 ... #>  $ avg_area_sqkm       : num  4357449 609788 86802 12393 1770 ... #>  $ avg_edge_m          : num  1107713 418676 158245 59811 22606 ... #>  $ avg_edge_km         : num  1107.7 418.7 158.2 59.8 22.6 ... #>  $ avg_cendist_m       : num  1918614 725168 274088 103595 39155 ... #>  $ avg_cendist_km      : num  1918.6 725.2 274.1 103.6 39.2 ... #>  $ total_unique_indexes: num  122 842 5882 41162 288122 ... cell_area(h3_address = '8abe8d12acaffff', 'km2') #> [1] 0.0177539  edge_length(h3_edge = '166be8d12fffffff', 'km') #> [1] 4.037687"},{"path":"https://obrl-soil.github.io/h3jsr/articles/intro-to-h3jsr.html","id":"conversion-utilities","dir":"Articles","previous_headings":"","what":"Conversion utilities","title":"Introduction to h3jsr","text":"Functions available convert H3 addresses 64-bit hexadecimal strings pairs 32-bit integers, vice versa: Lastly, convenience functions available converting degrees radians. implemented base R default, results identical obtained much faster. H3 functions remain accessible testing.","code":"x <- cell_to_splitlong(h3_address = '8abe8d12acaffff')  y <- splitlong_to_cell(split_lower = x[[1]][1], split_upper = x[[1]][2])  x #> [[1]] #> [1] 717946879 145483985 y #> [1] \"8abe8d12acaffff\" degs_to_rads(120) #> [1] 2.094395  rads_to_degs(1.5) #> [1] 85.94367 # reset local options options(local_options)"},{"path":"https://obrl-soil.github.io/h3jsr/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Lauren O'Brien. Author, maintainer.","code":""},{"path":"https://obrl-soil.github.io/h3jsr/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"O'Brien L (2022). h3jsr: Access Uber's H3 Library. R package version 1.3.0, https://obrl-soil.github.io/h3jsr/.","code":"@Manual{,   title = {h3jsr: Access Uber's H3 Library},   author = {Lauren O'Brien},   year = {2022},   note = {R package version 1.3.0},   url = {https://obrl-soil.github.io/h3jsr/}, }"},{"path":"https://obrl-soil.github.io/h3jsr/index.html","id":"h3jsr","dir":"","previous_headings":"","what":"Access Uber's H3 Library","title":"Access Uber's H3 Library","text":"h3jsr provides access Uber’s H3 library via javascript transpile, using magical power V8. H3 hexagonal hierarchical geospatial indexing system. Details structure use cases can found .","code":""},{"path":"https://obrl-soil.github.io/h3jsr/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Access Uber's H3 Library","text":"Install CRAN Install development version GitHub 💡 latest version (v1.3.0) contains API revision, functions new names. See NEWS.","code":"install.packages('h3jsr') remotes::install_github(\"obrl-soil/h3jsr\")"},{"path":"https://obrl-soil.github.io/h3jsr/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Access Uber's H3 Library","text":"Props Joel Gombin, ’s package concaveman provided implementation inspo.","code":"library(h3jsr) library(sf) #> Linking to GEOS 3.9.1, GDAL 3.4.3, PROJ 7.2.1; sf_use_s2() is TRUE  # where is the Brisbane Town Hall at resolution 15? bth <- st_sfc(st_point(c(153.023503, -27.468920)), crs = 4326) point_to_cell(bth, res = 15) #> [1] \"8fbe8d12acad2f3\"  # where is it at several resolutions? point_to_cell(bth, res = seq(10, 15), simple = FALSE) #>   h3_resolution_10 h3_resolution_11 h3_resolution_12 h3_resolution_13 #> 1  8abe8d12acaffff  8bbe8d12acadfff  8cbe8d12acad3ff  8dbe8d12acad2ff #>   h3_resolution_14 h3_resolution_15 #> 1  8ebe8d12acad2f7  8fbe8d12acad2f3  # Where is the center of the hexagon over the Brisbane Town  # Hall at resolution 10? brisbane_10 <- cell_to_point(h3_address = '8abe8d12acaffff') brisbane_10 #> Geometry set for 1 feature  #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: 153.0239 ymin: -27.46853 xmax: 153.0239 ymax: -27.46853 #> Geodetic CRS:  WGS 84 #> POINT (153.0239 -27.46853)  # Is that a valid H3 address? is_valid(h3_address = '8abe8d12acaffff') #> [1] TRUE  # is it a pentagon? is_pentagon(h3_address = '8abe8d12acaffff') #> [1] FALSE  # is it Class III? is_rc3(h3_address = '8abe8d12acaffff') #> [1] FALSE  # What is Brisbane Town Hall's base cell number? get_base_cell(h3_address = '8abe8d12acaffff') #> [1] 95  # What is the hexagon over the Brisbane Town Hall at resolution 10? brisbane_hex_10 <- cell_to_polygon(input = '8abe8d12acaffff', simple = FALSE)  # if you're feeling fancy, # point_to_cell(bth, res = seq(10,15)) %>% #   unlist() %>% #   h3_to_polygon(., simple = FALSE) %>% #   mapview::mapview()"},{"path":"https://obrl-soil.github.io/h3jsr/reference/are_neighbours.html","id":null,"dir":"Reference","previous_headings":"","what":"check if H3 cells are neighbours — are_neighbours","title":"check if H3 cells are neighbours — are_neighbours","text":"function checks whether two H3 cells share edge.","code":""},{"path":"https://obrl-soil.github.io/h3jsr/reference/are_neighbours.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"check if H3 cells are neighbours — are_neighbours","text":"","code":"are_neighbours(origin = NULL, destination = NULL, simple = TRUE)"},{"path":"https://obrl-soil.github.io/h3jsr/reference/are_neighbours.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"check if H3 cells are neighbours — are_neighbours","text":"origin Character; 15-character cell index generated H3. vector indexes can also supplied. destination Character; 15-character cell index generated H3. vector indexes can also supplied. simple Logical; whether return vector outputs data frame containing inputs outputs.","code":""},{"path":"https://obrl-soil.github.io/h3jsr/reference/are_neighbours.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"check if H3 cells are neighbours — are_neighbours","text":"Logical; TRUE neighbours.","code":""},{"path":"https://obrl-soil.github.io/h3jsr/reference/are_neighbours.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"check if H3 cells are neighbours — are_neighbours","text":"number indexes supplied origin destination must equal. function always return false indexes different resolutions.","code":""},{"path":"https://obrl-soil.github.io/h3jsr/reference/are_neighbours.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"check if H3 cells are neighbours — are_neighbours","text":"","code":"# Are the following cells neighbours? are_neighbours(origin = '86be8d12fffffff', destination = '86be8d127ffffff') #> [1] TRUE"},{"path":"https://obrl-soil.github.io/h3jsr/reference/cell_area.html","id":null,"dir":"Reference","previous_headings":"","what":"Get exact cell area — cell_area","title":"Get exact cell area — cell_area","text":"function calculates exact area H3 cell.","code":""},{"path":"https://obrl-soil.github.io/h3jsr/reference/cell_area.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get exact cell area — cell_area","text":"","code":"cell_area(h3_address = NULL, units = c(\"m2\", \"km2\", \"rads2\"), simple = TRUE)"},{"path":"https://obrl-soil.github.io/h3jsr/reference/cell_area.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get exact cell area — cell_area","text":"h3_address Character; 15-character index generated H3. units Length unit report . Options square meters, square kilometers, steradians. simple Logical; whether return vector outputs data frame containing inputs outputs.","code":""},{"path":"https://obrl-soil.github.io/h3jsr/reference/cell_area.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get exact cell area — cell_area","text":"default, numeric vector length(h3_address).","code":""},{"path":"https://obrl-soil.github.io/h3jsr/reference/cell_area.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get exact cell area — cell_area","text":"","code":"cell_area(h3_address = '8abe8d12acaffff', 'm2') #> [1] 17753.9"},{"path":"https://obrl-soil.github.io/h3jsr/reference/cell_to_line.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert H3 cell indexes to a line — cell_to_line","title":"Convert H3 cell indexes to a line — cell_to_line","text":"Return line geometry sequence H3 cell indexes WGS84 coordinates.","code":""},{"path":"https://obrl-soil.github.io/h3jsr/reference/cell_to_line.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert H3 cell indexes to a line — cell_to_line","text":"","code":"cell_to_line(input = NULL, simple = TRUE)  # S3 method for data.frame cell_to_line(input = NULL, simple = TRUE)  # S3 method for list cell_to_line(input = NULL, simple = TRUE)  # S3 method for character cell_to_line(input = NULL, simple = TRUE)"},{"path":"https://obrl-soil.github.io/h3jsr/reference/cell_to_line.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert H3 cell indexes to a line — cell_to_line","text":"input Character vector 15-character indexes generated H3, list , data frame last column list-column H3 cell indexes (usually output h3jsr::grid_path(). simple Logical; whether return sfc_LINESTRING object sf data frame containing inputs outputs.","code":""},{"path":"https://obrl-soil.github.io/h3jsr/reference/cell_to_line.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert H3 cell indexes to a line — cell_to_line","text":"sfc_LINESTRING object containing line vector   H3 cell indexes supplied. simple = FALSE, sf object   including input data.","code":""},{"path":"https://obrl-soil.github.io/h3jsr/reference/cell_to_line.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Convert H3 cell indexes to a line — cell_to_line","text":"function can accept arbitrary vector cell indexes (including   cells multiple resolutions) results may unexpected.   assumed indexes supplied pre-ordered fashion.","code":""},{"path":"https://obrl-soil.github.io/h3jsr/reference/cell_to_line.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert H3 cell indexes to a line — cell_to_line","text":"","code":"# What is the cell index over the Brisbane Town Hall at resolution 10? brisbane_hex_10 <- cell_to_polygon(input = '8abe8d12acaffff')  # Give me a some nearby cells hex_sample <- get_disk_list('8abe8d12acaffff', 4)[[1]][[4]][seq(1,18,3)] hex_sample_polys <- cell_to_polygon(hex_sample)  # find connecting paths paths <- grid_path(rep('8abe8d12acaffff', 6), hex_sample)  # make lines lines <- cell_to_line(paths)  if (FALSE) { plot(hex_sample_polys, reset = FALSE) plot(brisbane_hex_10, add = TRUE) plot(lines, col = 'red', add = TRUE) }"},{"path":"https://obrl-soil.github.io/h3jsr/reference/cell_to_point.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert H3 cell index to point location — cell_to_point","title":"Convert H3 cell index to point location — cell_to_point","text":"function takes H3 cell index returns center coordinates WGS84.","code":""},{"path":"https://obrl-soil.github.io/h3jsr/reference/cell_to_point.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert H3 cell index to point location — cell_to_point","text":"","code":"cell_to_point(h3_address = NULL, simple = TRUE)"},{"path":"https://obrl-soil.github.io/h3jsr/reference/cell_to_point.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert H3 cell index to point location — cell_to_point","text":"h3_address Character; 15-character index generated H3. simple Logical; whether return vector outputs data frame containing inputs outputs.","code":""},{"path":"https://obrl-soil.github.io/h3jsr/reference/cell_to_point.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert H3 cell index to point location — cell_to_point","text":"default, sfc_POINT object length(h3_address).   EPSG:WGS84.","code":""},{"path":"https://obrl-soil.github.io/h3jsr/reference/cell_to_point.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert H3 cell index to point location — cell_to_point","text":"","code":"# Where is the center of the hexagon over the Brisbane Town Hall at resolution 10? brisbane_10 <- cell_to_point(h3_address = '8abe8d12acaffff')"},{"path":"https://obrl-soil.github.io/h3jsr/reference/cell_to_polygon.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the boundary of an H3 cell index — cell_to_polygon","title":"Get the boundary of an H3 cell index — cell_to_polygon","text":"function takes H3 cell index returns bounding shape (usually hexagon) WGS84.","code":""},{"path":"https://obrl-soil.github.io/h3jsr/reference/cell_to_polygon.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the boundary of an H3 cell index — cell_to_polygon","text":"","code":"cell_to_polygon(input = NULL, simple = TRUE)"},{"path":"https://obrl-soil.github.io/h3jsr/reference/cell_to_polygon.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the boundary of an H3 cell index — cell_to_polygon","text":"input Character; 15-character index generated H3, vector list , data frame first column contains H3 addresses. simple Logical; whether return sfc_POLYGON object sf data frame containing inputs outputs.","code":""},{"path":"https://obrl-soil.github.io/h3jsr/reference/cell_to_polygon.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the boundary of an H3 cell index — cell_to_polygon","text":"default, sfc_POLYGON object length(input).   appropriately formatted data frame supplied, sf data frame   containing input attributes geometry.","code":""},{"path":"https://obrl-soil.github.io/h3jsr/reference/cell_to_polygon.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the boundary of an H3 cell index — cell_to_polygon","text":"","code":"# What is the hexagon over the Brisbane Town Hall at resolution 10? brisbane_hex_10 <- cell_to_polygon(input = '8abe8d12acaffff')  # Give me some of the cells over Brisbane Town Hall as an sf object bth <- sf::st_sfc(sf::st_point(c(153.023503, -27.468920)), crs = 4326) bth_addys <- unlist(point_to_cell(bth, res = seq(10, 15)), use.names = FALSE) bth_hexes <- cell_to_polygon(input = bth_addys) plot(bth_hexes, axes = TRUE)"},{"path":"https://obrl-soil.github.io/h3jsr/reference/cell_to_splitlong.html","id":null,"dir":"Reference","previous_headings":"","what":"H3 cell to split long — cell_to_splitlong","title":"H3 cell to split long — cell_to_splitlong","text":"Convert H3 cell (64-bit hexidecimal string) \"split long\" - pair 32-bit integers.","code":""},{"path":"https://obrl-soil.github.io/h3jsr/reference/cell_to_splitlong.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"H3 cell to split long — cell_to_splitlong","text":"","code":"cell_to_splitlong(h3_address, simple = TRUE)"},{"path":"https://obrl-soil.github.io/h3jsr/reference/cell_to_splitlong.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"H3 cell to split long — cell_to_splitlong","text":"h3_address Character; 15-character index generated H3. simple Logical; whether return vector data frame containing inputs outputs.","code":""},{"path":"https://obrl-soil.github.io/h3jsr/reference/cell_to_splitlong.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"H3 cell to split long — cell_to_splitlong","text":"list integer pairs, one address supplied.","code":""},{"path":"https://obrl-soil.github.io/h3jsr/reference/cell_to_splitlong.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"H3 cell to split long — cell_to_splitlong","text":"","code":"cell_to_splitlong(h3_address = '8abe8d12acaffff') #> [[1]] #> [1] 717946879 145483985 #>"},{"path":"https://obrl-soil.github.io/h3jsr/reference/cells_to_multipolygon.html","id":null,"dir":"Reference","previous_headings":"","what":"Get geometry for a set of H3 cells — cells_to_multipolygon","title":"Get geometry for a set of H3 cells — cells_to_multipolygon","text":"function returns geometry associated set H3 cells, single sfc_MULTIPOLYGON.","code":""},{"path":"https://obrl-soil.github.io/h3jsr/reference/cells_to_multipolygon.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get geometry for a set of H3 cells — cells_to_multipolygon","text":"","code":"cells_to_multipolygon(h3_addresses = NULL, simple = TRUE)"},{"path":"https://obrl-soil.github.io/h3jsr/reference/cells_to_multipolygon.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get geometry for a set of H3 cells — cells_to_multipolygon","text":"h3_addresses Character vector list 15-character cell indices generated H3. simple Logical; whether return sfc_MULTIPOLYGON sf object including input cells.","code":""},{"path":"https://obrl-soil.github.io/h3jsr/reference/cells_to_multipolygon.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get geometry for a set of H3 cells — cells_to_multipolygon","text":"default, object type sfc_MULTIPOLYGON length 1.","code":""},{"path":"https://obrl-soil.github.io/h3jsr/reference/cells_to_multipolygon.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Get geometry for a set of H3 cells — cells_to_multipolygon","text":"geometry returned function valid   addresses supplied overlap resolution. main use case   function appears visualising outputs   polygon_to_cells   compact.","code":""},{"path":"https://obrl-soil.github.io/h3jsr/reference/cells_to_multipolygon.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get geometry for a set of H3 cells — cells_to_multipolygon","text":"","code":"if (FALSE) { # Give me the outline of the cells around Brisbane Town Hall at # resolution 10 (not run as slow-ish) bth <- sf::st_sfc(sf::st_point(c(153.023503, -27.468920)), crs = 4326) bth_10 <- point_to_h3(bth, res = 10) bth_patch <- get_disk(h3_address = bth_10, ring_size = 2) bth_patch_sf <- cells_to_multipolygon(bth_patch) }"},{"path":"https://obrl-soil.github.io/h3jsr/reference/compact.html","id":null,"dir":"Reference","previous_headings":"","what":"Compact H3 cells — compact","title":"Compact H3 cells — compact","text":"function compacts set cells resolution set cells across multiple resolutions represents area.","code":""},{"path":"https://obrl-soil.github.io/h3jsr/reference/compact.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compact H3 cells — compact","text":"","code":"compact(h3_addresses = NULL, simple = TRUE)"},{"path":"https://obrl-soil.github.io/h3jsr/reference/compact.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compact H3 cells — compact","text":"h3_addresses Character vector list 15-character indices generated H3 single resolution, generally output polygon_to_cells. simple Logical; whether return vector outputs list object containing inputs outputs.","code":""},{"path":"https://obrl-soil.github.io/h3jsr/reference/compact.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compact H3 cells — compact","text":"list H3 cells multiple resolutions. minimum   resolution output list matches resolution input list.","code":""},{"path":"https://obrl-soil.github.io/h3jsr/reference/compact.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compact H3 cells — compact","text":"","code":"if (FALSE) { # Give me a compacted representation of County Ashe, NC nc <- sf::st_read(system.file(\"shape/nc.shp\", package=\"sf\"), quiet = TRUE) nc1 <- nc[1, ] nc1 <- sf::st_cast(nc1, 'POLYGON') fillers <- polygon_to_cells(geometry = nc1, res = 6) compacted <- compact(fillers) }"},{"path":"https://obrl-soil.github.io/h3jsr/reference/degs_to_rads.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert degrees to radians — degs_to_rads","title":"Convert degrees to radians — degs_to_rads","text":"Convert degrees radians.","code":""},{"path":"https://obrl-soil.github.io/h3jsr/reference/degs_to_rads.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert degrees to radians — degs_to_rads","text":"","code":"degs_to_rads(degree = NULL, lang = c(\"r\", \"h3\"), simple = TRUE)"},{"path":"https://obrl-soil.github.io/h3jsr/reference/degs_to_rads.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert degrees to radians — degs_to_rads","text":"degree Numeric, value degrees lang Character; whether perform conversion using base R H3 library. Defaults R speed. simple Logical; whether return vector data frame containing inputs outputs.","code":""},{"path":"https://obrl-soil.github.io/h3jsr/reference/degs_to_rads.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert degrees to radians — degs_to_rads","text":"Numeric, value radians","code":""},{"path":"https://obrl-soil.github.io/h3jsr/reference/degs_to_rads.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert degrees to radians — degs_to_rads","text":"","code":"degs_to_rads(120) #> [1] 2.094395"},{"path":"https://obrl-soil.github.io/h3jsr/reference/edge_length.html","id":null,"dir":"Reference","previous_headings":"","what":"Get exact cell edge length — edge_length","title":"Get exact cell edge length — edge_length","text":"function calculates exact length H3 cell edge.","code":""},{"path":"https://obrl-soil.github.io/h3jsr/reference/edge_length.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get exact cell edge length — edge_length","text":"","code":"edge_length(h3_edge = NULL, units = c(\"m\", \"km\", \"rads\"), simple = TRUE)"},{"path":"https://obrl-soil.github.io/h3jsr/reference/edge_length.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get exact cell edge length — edge_length","text":"h3_edge Character; address unidirectional edge. units Length unit report . Options meters, kilometers, radians. simple Logical; whether return vector outputs data frame containing inputs outputs.","code":""},{"path":"https://obrl-soil.github.io/h3jsr/reference/edge_length.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get exact cell edge length — edge_length","text":"default, numeric vector length(h3_address).","code":""},{"path":"https://obrl-soil.github.io/h3jsr/reference/edge_length.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get exact cell edge length — edge_length","text":"","code":"edge_length(h3_edge = '166be8d12fffffff', 'm') #> [1] 4037.687"},{"path":"https://obrl-soil.github.io/h3jsr/reference/get_base_cell.html","id":null,"dir":"Reference","previous_headings":"","what":"get the base cell of an H3 cell index — get_base_cell","title":"get the base cell of an H3 cell index — get_base_cell","text":"function returns number base (Level 1) cell H3 cell idnex.","code":""},{"path":"https://obrl-soil.github.io/h3jsr/reference/get_base_cell.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get the base cell of an H3 cell index — get_base_cell","text":"","code":"get_base_cell(h3_address = NULL, simple = TRUE)"},{"path":"https://obrl-soil.github.io/h3jsr/reference/get_base_cell.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get the base cell of an H3 cell index — get_base_cell","text":"h3_address Character; 15-character index generated H3. simple Logical; whether return vector outputs data frame containing inputs outputs.","code":""},{"path":"https://obrl-soil.github.io/h3jsr/reference/get_base_cell.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get the base cell of an H3 cell index — get_base_cell","text":"default, integer vector length(h3_address), ranging   0 121.","code":""},{"path":"https://obrl-soil.github.io/h3jsr/reference/get_base_cell.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"get the base cell of an H3 cell index — get_base_cell","text":"","code":"# What is Brisbane Town Hall's base cell number? get_base_cell(h3_address = '8abe8d12acaffff') #> [1] 95"},{"path":"https://obrl-soil.github.io/h3jsr/reference/get_cell_vertex.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a vertex index — get_cell_vertex","title":"Get a vertex index — get_cell_vertex","text":"function returns vertex index supplied H3 cell vertex number.","code":""},{"path":"https://obrl-soil.github.io/h3jsr/reference/get_cell_vertex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a vertex index — get_cell_vertex","text":"","code":"get_cell_vertex(h3_address = NULL, v_num = 0, simple = TRUE)"},{"path":"https://obrl-soil.github.io/h3jsr/reference/get_cell_vertex.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a vertex index — get_cell_vertex","text":"h3_address Character; 15-character cell index generated H3. vector indexes can also supplied. v_num Numeric; vertex number required. Options 0-5 inclusive. simple Logical; whether return vector outputs data frame containing inputs outputs.","code":""},{"path":"https://obrl-soil.github.io/h3jsr/reference/get_cell_vertex.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a vertex index — get_cell_vertex","text":"default, list length(h3_address).","code":""},{"path":"https://obrl-soil.github.io/h3jsr/reference/get_cell_vertex.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a vertex index — get_cell_vertex","text":"","code":"# Get vertex 3 for this cell get_cell_vertex(h3_address = '86be8d12fffffff', 3) #> [1] \"256be8d10fffffff\""},{"path":"https://obrl-soil.github.io/h3jsr/reference/get_cell_vertexes.html","id":null,"dir":"Reference","previous_headings":"","what":"Get all vertex indexes — get_cell_vertexes","title":"Get all vertex indexes — get_cell_vertexes","text":"function returns 6 vertex indices supplied H3 cell.","code":""},{"path":"https://obrl-soil.github.io/h3jsr/reference/get_cell_vertexes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get all vertex indexes — get_cell_vertexes","text":"","code":"get_cell_vertexes(h3_address = NULL, simple = TRUE)"},{"path":"https://obrl-soil.github.io/h3jsr/reference/get_cell_vertexes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get all vertex indexes — get_cell_vertexes","text":"h3_address Character; 15-character cell index generated H3. vector indexes can also supplied. simple Logical; whether return vector outputs data frame containing inputs outputs.","code":""},{"path":"https://obrl-soil.github.io/h3jsr/reference/get_cell_vertexes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get all vertex indexes — get_cell_vertexes","text":"default, list length(h3_address).","code":""},{"path":"https://obrl-soil.github.io/h3jsr/reference/get_cell_vertexes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get all vertex indexes — get_cell_vertexes","text":"","code":"# Get vertexes for this cell get_cell_vertexes(h3_address = '86be8d12fffffff') #> [[1]] #> [1] \"246be8d127ffffff\" \"256be8d107ffffff\" \"246be8d107ffffff\" \"256be8d10fffffff\" #> [5] \"246be8d12fffffff\" \"256be8d12fffffff\" #>"},{"path":"https://obrl-soil.github.io/h3jsr/reference/get_centerchild.html","id":null,"dir":"Reference","previous_headings":"","what":"get central child H3 cell index — get_centerchild","title":"get central child H3 cell index — get_centerchild","text":"function returns central child particular H3 cell index requested resolution.","code":""},{"path":"https://obrl-soil.github.io/h3jsr/reference/get_centerchild.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get central child H3 cell index — get_centerchild","text":"","code":"get_centerchild(h3_address = NULL, res = NULL, simple = TRUE)"},{"path":"https://obrl-soil.github.io/h3jsr/reference/get_centerchild.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get central child H3 cell index — get_centerchild","text":"h3_address Character; 15-character index generated H3. res Integer; Desired H3 resolution. See https://h3geo.org/docs/core-library/restable/ allowable values related dimensions. simple Logical; whether return vector outputs data frame containing inputs outputs.","code":""},{"path":"https://obrl-soil.github.io/h3jsr/reference/get_centerchild.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get central child H3 cell index — get_centerchild","text":"default, list length(h3_address). list element contains   vector H3 cells.","code":""},{"path":"https://obrl-soil.github.io/h3jsr/reference/get_centerchild.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"get central child H3 cell index — get_centerchild","text":"","code":"# What is the central child of this resolution 6 index at resolution 8? get_centerchild(h3_address = '86be8d12fffffff', res = 8) #> [1] \"88be8d1281fffff\""},{"path":"https://obrl-soil.github.io/h3jsr/reference/get_children.html","id":null,"dir":"Reference","previous_headings":"","what":"get child H3 cell indices — get_children","title":"get child H3 cell indices — get_children","text":"function returns children particular H3 cell requested resolution.","code":""},{"path":"https://obrl-soil.github.io/h3jsr/reference/get_children.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get child H3 cell indices — get_children","text":"","code":"get_children(h3_address = NULL, res = NULL, simple = TRUE)"},{"path":"https://obrl-soil.github.io/h3jsr/reference/get_children.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get child H3 cell indices — get_children","text":"h3_address Character; 15-character index generated H3. res Integer; Desired H3 resolution. See https://h3geo.org/docs/core-library/restable/ allowable values related dimensions. simple Logical; whether return vector outputs data frame containing inputs outputs.","code":""},{"path":"https://obrl-soil.github.io/h3jsr/reference/get_children.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get child H3 cell indices — get_children","text":"default, list length(h3_address). list element contains   vector H3 cell indexes.","code":""},{"path":"https://obrl-soil.github.io/h3jsr/reference/get_children.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"get child H3 cell indices — get_children","text":"number cells returned request 7 ^ (parent_res -   child_res), jumping three levels return 343 indexes per request.   can cause memory issues larger requests.","code":""},{"path":"https://obrl-soil.github.io/h3jsr/reference/get_children.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"get child H3 cell indices — get_children","text":"","code":"# What are the children of this resolution 6 cell index at resolution 8? get_children(h3_address = '86be8d12fffffff', res = 8) #> [[1]] #>  [1] \"88be8d1281fffff\" \"88be8d1283fffff\" \"88be8d1285fffff\" \"88be8d1287fffff\" #>  [5] \"88be8d1289fffff\" \"88be8d128bfffff\" \"88be8d128dfffff\" \"88be8d1291fffff\" #>  [9] \"88be8d1293fffff\" \"88be8d1295fffff\" \"88be8d1297fffff\" \"88be8d1299fffff\" #> [13] \"88be8d129bfffff\" \"88be8d129dfffff\" \"88be8d12a1fffff\" \"88be8d12a3fffff\" #> [17] \"88be8d12a5fffff\" \"88be8d12a7fffff\" \"88be8d12a9fffff\" \"88be8d12abfffff\" #> [21] \"88be8d12adfffff\" \"88be8d12b1fffff\" \"88be8d12b3fffff\" \"88be8d12b5fffff\" #> [25] \"88be8d12b7fffff\" \"88be8d12b9fffff\" \"88be8d12bbfffff\" \"88be8d12bdfffff\" #> [29] \"88be8d12c1fffff\" \"88be8d12c3fffff\" \"88be8d12c5fffff\" \"88be8d12c7fffff\" #> [33] \"88be8d12c9fffff\" \"88be8d12cbfffff\" \"88be8d12cdfffff\" \"88be8d12d1fffff\" #> [37] \"88be8d12d3fffff\" \"88be8d12d5fffff\" \"88be8d12d7fffff\" \"88be8d12d9fffff\" #> [41] \"88be8d12dbfffff\" \"88be8d12ddfffff\" \"88be8d12e1fffff\" \"88be8d12e3fffff\" #> [45] \"88be8d12e5fffff\" \"88be8d12e7fffff\" \"88be8d12e9fffff\" \"88be8d12ebfffff\" #> [49] \"88be8d12edfffff\" #>"},{"path":"https://obrl-soil.github.io/h3jsr/reference/get_disk.html","id":null,"dir":"Reference","previous_headings":"","what":"Get nearby H3 cell indices — get_disk","title":"Get nearby H3 cell indices — get_disk","text":"function returns H3 cell indices within specified number steps index supplied.","code":""},{"path":"https://obrl-soil.github.io/h3jsr/reference/get_disk.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get nearby H3 cell indices — get_disk","text":"","code":"get_disk(h3_address = NULL, ring_size = 1, simple = TRUE)"},{"path":"https://obrl-soil.github.io/h3jsr/reference/get_disk.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get nearby H3 cell indices — get_disk","text":"h3_address Character; 15-character cell index generated H3. ring_size Character; number steps away central cell. Defaults 1. simple Logical; whether return vector outputs data frame containing inputs outputs.","code":""},{"path":"https://obrl-soil.github.io/h3jsr/reference/get_disk.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get nearby H3 cell indices — get_disk","text":"default, list length(h3_address). list element   contains character vector H3 cells.","code":""},{"path":"https://obrl-soil.github.io/h3jsr/reference/get_disk.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Get nearby H3 cell indices — get_disk","text":"number cells returned input index conforms   centered   hexagonal number sequence, ring_size = 5, 91 addresses   returned. first address returned input address, rest follow   spiral anticlockwise order.","code":""},{"path":"https://obrl-soil.github.io/h3jsr/reference/get_disk.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get nearby H3 cell indices — get_disk","text":"","code":"# What are all the neighbours of this cell within two steps? get_disk(h3_address = '86be8d12fffffff', ring_size = 2) #> [[1]] #>  [1] \"86be8d12fffffff\" \"86be8d127ffffff\" \"86be8d107ffffff\" \"86be8d10fffffff\" #>  [5] \"86be8d177ffffff\" \"86be8d8dfffffff\" \"86be8d8d7ffffff\" \"86be8d88fffffff\" #>  [9] \"86be8d89fffffff\" \"86be8d137ffffff\" \"86be8d117ffffff\" \"86be8d11fffffff\" #> [13] \"86be8d027ffffff\" \"86be8d157ffffff\" \"86be8d147ffffff\" \"86be8d167ffffff\" #> [17] \"86be8d8cfffffff\" \"86be8d8c7ffffff\" \"86be8d8f7ffffff\" #>"},{"path":"https://obrl-soil.github.io/h3jsr/reference/get_disk_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Get nearby H3 cell indexes separated by distance — get_disk_list","title":"Get nearby H3 cell indexes separated by distance — get_disk_list","text":"function returns H3 cell indexes within specified number steps address supplied, grouped step.","code":""},{"path":"https://obrl-soil.github.io/h3jsr/reference/get_disk_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get nearby H3 cell indexes separated by distance — get_disk_list","text":"","code":"get_disk_list(h3_address = NULL, ring_size = 1, simple = TRUE)"},{"path":"https://obrl-soil.github.io/h3jsr/reference/get_disk_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get nearby H3 cell indexes separated by distance — get_disk_list","text":"h3_address Character; 15-character cell index generated H3. ring_size Character; number steps away central cell. Defaults 1. simple Logical; whether return vector outputs data frame containing inputs outputs.","code":""},{"path":"https://obrl-soil.github.io/h3jsr/reference/get_disk_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get nearby H3 cell indexes separated by distance — get_disk_list","text":"default, list length(h3_address). list element   contains list length(ring_size + 1). lists   contains character vector H3 cell indices belonging step away   input cell.","code":""},{"path":"https://obrl-soil.github.io/h3jsr/reference/get_disk_list.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Get nearby H3 cell indexes separated by distance — get_disk_list","text":"total, number indices returned input cell conforms     centered   hexagonal number sequence, ring_size = 5, 91 cells   returned. Cells returned separate lists, one step.","code":""},{"path":"https://obrl-soil.github.io/h3jsr/reference/get_disk_list.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get nearby H3 cell indexes separated by distance — get_disk_list","text":"","code":"# What are the nested neighbours of this cell within two steps? get_disk_list(h3_address = '86be8d12fffffff', ring_size = 2) #> [[1]] #> [[1]][[1]] #> [1] \"86be8d12fffffff\" #>  #> [[1]][[2]] #> [1] \"86be8d127ffffff\" \"86be8d107ffffff\" \"86be8d10fffffff\" \"86be8d177ffffff\" #> [5] \"86be8d8dfffffff\" \"86be8d8d7ffffff\" #>  #> [[1]][[3]] #>  [1] \"86be8d88fffffff\" \"86be8d89fffffff\" \"86be8d137ffffff\" \"86be8d117ffffff\" #>  [5] \"86be8d11fffffff\" \"86be8d027ffffff\" \"86be8d157ffffff\" \"86be8d147ffffff\" #>  [9] \"86be8d167ffffff\" \"86be8d8cfffffff\" \"86be8d8c7ffffff\" \"86be8d8f7ffffff\" #>  #>"},{"path":"https://obrl-soil.github.io/h3jsr/reference/get_faces.html","id":null,"dir":"Reference","previous_headings":"","what":"get the icosahedron faces of an H3 cell index — get_faces","title":"get the icosahedron faces of an H3 cell index — get_faces","text":"function returns indices icosahedron faces intersected given H3 cell index.","code":""},{"path":"https://obrl-soil.github.io/h3jsr/reference/get_faces.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get the icosahedron faces of an H3 cell index — get_faces","text":"","code":"get_faces(h3_address = NULL, simple = TRUE)"},{"path":"https://obrl-soil.github.io/h3jsr/reference/get_faces.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get the icosahedron faces of an H3 cell index — get_faces","text":"h3_address Character; 15-character index generated H3. simple Logical; whether return vector outputs data frame containing inputs outputs.","code":""},{"path":"https://obrl-soil.github.io/h3jsr/reference/get_faces.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get the icosahedron faces of an H3 cell index — get_faces","text":"default, integer vector length(h3_address), ranging   1 20. simple = FALSE, data.frame column H3   cell indexes list-column faces.","code":""},{"path":"https://obrl-soil.github.io/h3jsr/reference/get_faces.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"get the icosahedron faces of an H3 cell index — get_faces","text":"","code":"# Which faces does this h3 cell index intersect? get_faces(h3_address = '8abe8d12acaffff') #> [1] 15"},{"path":"https://obrl-soil.github.io/h3jsr/reference/get_gcdist.html","id":null,"dir":"Reference","previous_headings":"","what":"Great circle distance — get_gcdist","title":"Great circle distance — get_gcdist","text":"Get great circle distance WGS84 lat/long points","code":""},{"path":"https://obrl-soil.github.io/h3jsr/reference/get_gcdist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Great circle distance — get_gcdist","text":"","code":"get_gcdist(pt1 = NULL, pt2 = NULL, units = c(\"m\", \"km\", \"rads\"), simple = TRUE)"},{"path":"https://obrl-soil.github.io/h3jsr/reference/get_gcdist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Great circle distance — get_gcdist","text":"pt1 `sf` object point geometry, `sfc_POINT` object, `sfg` point, data frame matrix. pt2 `sf` object point geometry, `sfc_POINT` object, `sfg` point, data frame matrix. units whether return great circle distance meters, kilometers, radians. simple whether return numeric vector distances `data.frame` containing start end coordinates well distance.","code":""},{"path":"https://obrl-soil.github.io/h3jsr/reference/get_gcdist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Great circle distance — get_gcdist","text":"Numeric vector point point distances, data frame origin   destination coordinates accompanied distances.","code":""},{"path":"https://obrl-soil.github.io/h3jsr/reference/get_gcdist.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Great circle distance — get_gcdist","text":"functionality also exists R packages sp, sf, geosphere fields. H3's version appears return slightly shorter distances implementations, included completeness.","code":""},{"path":"https://obrl-soil.github.io/h3jsr/reference/get_gcdist.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Great circle distance — get_gcdist","text":"","code":"# distance between Brisbane and Melbourne bne <- c(153.028, -27.468) mlb <- c(144.963, -37.814) get_gcdist(bne, mlb, 'km') #> Assuming positions 1 and 2 contain x, y coordinates in EPSG:4326 #> Assuming positions 1 and 2 contain x, y coordinates in EPSG:4326 #> [1] 1331.349"},{"path":"https://obrl-soil.github.io/h3jsr/reference/get_local_cell.html","id":null,"dir":"Reference","previous_headings":"","what":"Get H3 cell from local i, j coordinates — get_local_cell","title":"Get H3 cell from local i, j coordinates — get_local_cell","text":"function returns H3 destination cells local , j coordinate pairs anchored H3 origin cell.","code":""},{"path":"https://obrl-soil.github.io/h3jsr/reference/get_local_cell.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get H3 cell from local i, j coordinates — get_local_cell","text":"","code":"get_local_cell(origin = NULL, i = NULL, j = NULL, simple = TRUE)"},{"path":"https://obrl-soil.github.io/h3jsr/reference/get_local_cell.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get H3 cell from local i, j coordinates — get_local_cell","text":"origin Character; 15-character cell index generated H3. vector indexes can also supplied. single coordinate vector , generated get_local_ij j single j coordinate vector , generated get_local_ij simple Logical; whether return vector outputs data frame containing inputs outputs.","code":""},{"path":"https://obrl-soil.github.io/h3jsr/reference/get_local_cell.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get H3 cell from local i, j coordinates — get_local_cell","text":"simple = TRUE, character vector destination H3 cells.   , data frame containing columns origin, , j, destination.","code":""},{"path":"https://obrl-soil.github.io/h3jsr/reference/get_local_cell.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Get H3 cell from local i, j coordinates — get_local_cell","text":"coordinate space used function may deleted regions   warping due pentagonal distortion. Coordinates comparable come origin   cell. Failure may occur destination far away origin   destination side pentagon. function experimental, output guaranteed   compatible across different versions H3.","code":""},{"path":"https://obrl-soil.github.io/h3jsr/reference/get_local_cell.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get H3 cell from local i, j coordinates — get_local_cell","text":"","code":"# Get local coordinates for a nearby cell local <- get_local_ij(origin = '86be8d12fffffff', destination = '86be8d127ffffff')  # Convert back to destination cell get_local_cell(origin = '86be8d12fffffff', i = local[, 1], j = local[, 2]) #> [1] \"86be8d127ffffff\""},{"path":"https://obrl-soil.github.io/h3jsr/reference/get_local_ij.html","id":null,"dir":"Reference","previous_headings":"","what":"Get local i, j coordinates — get_local_ij","title":"Get local i, j coordinates — get_local_ij","text":"function defines local , j coordinates H3 destination cell relative H3 origin cell.","code":""},{"path":"https://obrl-soil.github.io/h3jsr/reference/get_local_ij.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get local i, j coordinates — get_local_ij","text":"","code":"get_local_ij(origin = NULL, destination = NULL, simple = TRUE)"},{"path":"https://obrl-soil.github.io/h3jsr/reference/get_local_ij.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get local i, j coordinates — get_local_ij","text":"origin Character; 15-character cell index generated H3. vector indexes can also supplied. destination Character; 15-character cell index generated H3. vector indexes can also supplied. simple Logical; whether include unprojected sfc_POINT geometry column output object.","code":""},{"path":"https://obrl-soil.github.io/h3jsr/reference/get_local_ij.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get local i, j coordinates — get_local_ij","text":"simple = TRUE, matrix row contains local   , j coordinates supplied destination indexes. , sf object origin destination attributes, point geometry   destination cell centers, undefined coordinate reference system.","code":""},{"path":"https://obrl-soil.github.io/h3jsr/reference/get_local_ij.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Get local i, j coordinates — get_local_ij","text":"number indexes supplied origin destination must equal. coordinate space used function may deleted regions   warping due pentagonal distortion. Coordinates comparable come origin   index. Failure may occur index far away origin   index side pentagon. function experimental, output guaranteed   compatible across different versions H3.","code":""},{"path":"https://obrl-soil.github.io/h3jsr/reference/get_local_ij.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get local i, j coordinates — get_local_ij","text":"","code":"# Get local coordinates for a nearby cell get_local_ij(origin = '86be8d12fffffff', destination = '86be8d127ffffff') #>     i  j #> 1 -87 36  # Get local coordinates for a donut of nearby cells destinations <- get_ring(h3_address = '86be8d12fffffff', ring_size = 2) local_coords <- get_local_ij(origin = rep('86be8d12fffffff', length(destinations[[1]])),                              destination = destinations[[1]],                              simple = FALSE)  plot(local_coords['destination'], pch = 19) # note origin is (0,0)"},{"path":"https://obrl-soil.github.io/h3jsr/reference/get_parent.html","id":null,"dir":"Reference","previous_headings":"","what":"get parent H3 cell index — get_parent","title":"get parent H3 cell index — get_parent","text":"function returns parent particular H3 cell index requested resolution.","code":""},{"path":"https://obrl-soil.github.io/h3jsr/reference/get_parent.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get parent H3 cell index — get_parent","text":"","code":"get_parent(h3_address = NULL, res = NULL, simple = TRUE)"},{"path":"https://obrl-soil.github.io/h3jsr/reference/get_parent.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get parent H3 cell index — get_parent","text":"h3_address Character; 15-character index generated H3. res Integer; Desired H3 resolution. See https://h3geo.org/docs/core-library/restable/ allowable values related dimensions. simple Logical; whether return vector outputs data frame containing inputs outputs.","code":""},{"path":"https://obrl-soil.github.io/h3jsr/reference/get_parent.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get parent H3 cell index — get_parent","text":"default, logical vector length(h3_address).","code":""},{"path":"https://obrl-soil.github.io/h3jsr/reference/get_parent.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"get parent H3 cell index — get_parent","text":"","code":"# What is the parent of this cell at resolution 6? get_parent(h3_address = '8abe8d12acaffff', res = 6) #> [1] \"86be8d12fffffff\""},{"path":"https://obrl-soil.github.io/h3jsr/reference/get_pentagons.html","id":null,"dir":"Reference","previous_headings":"","what":"get the pentagon indices for an H3 resolution — get_pentagons","title":"get the pentagon indices for an H3 resolution — get_pentagons","text":"function returns indices pentagons occurring given H3 resolution.","code":""},{"path":"https://obrl-soil.github.io/h3jsr/reference/get_pentagons.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get the pentagon indices for an H3 resolution — get_pentagons","text":"","code":"get_pentagons(res = NULL, simple = TRUE)"},{"path":"https://obrl-soil.github.io/h3jsr/reference/get_pentagons.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get the pentagon indices for an H3 resolution — get_pentagons","text":"res Integer; Desired H3 resolution. See https://h3geo.org/docs/core-library/restable/ allowable values related dimensions. simple Logical; whether return outputs list outputs (TRUE) data frame inputs outputs.","code":""},{"path":"https://obrl-soil.github.io/h3jsr/reference/get_pentagons.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get the pentagon indices for an H3 resolution — get_pentagons","text":"default, list length(h3_address). list element   contains vector twelve H3 addresses. simple = FALSE, data   frame column input resolutions list-column pentagon   indexes .","code":""},{"path":"https://obrl-soil.github.io/h3jsr/reference/get_pentagons.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"get the pentagon indices for an H3 resolution — get_pentagons","text":"","code":"# Which indexes are pentagons at resolution 7? get_pentagons(res = 7) #> [[1]] #>  [1] \"870800000ffffff\" \"871c00000ffffff\" \"873000000ffffff\" \"874c00000ffffff\" #>  [5] \"876200000ffffff\" \"877400000ffffff\" \"877e00000ffffff\" \"879000000ffffff\" #>  [9] \"87a600000ffffff\" \"87c200000ffffff\" \"87d600000ffffff\" \"87ea00000ffffff\" #>"},{"path":"https://obrl-soil.github.io/h3jsr/reference/get_res.html","id":null,"dir":"Reference","previous_headings":"","what":"get the resolution of an H3 cell index — get_res","title":"get the resolution of an H3 cell index — get_res","text":"function returns H3 cell index's resolution level.","code":""},{"path":"https://obrl-soil.github.io/h3jsr/reference/get_res.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get the resolution of an H3 cell index — get_res","text":"","code":"get_res(h3_address = NULL, simple = TRUE)"},{"path":"https://obrl-soil.github.io/h3jsr/reference/get_res.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get the resolution of an H3 cell index — get_res","text":"h3_address Character; 15-character index generated H3. simple Logical; whether return vector outputs data frame containing inputs outputs.","code":""},{"path":"https://obrl-soil.github.io/h3jsr/reference/get_res.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get the resolution of an H3 cell index — get_res","text":"default, integer vector length(h3_address), ranging   1 15.","code":""},{"path":"https://obrl-soil.github.io/h3jsr/reference/get_res.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"get the resolution of an H3 cell index — get_res","text":"","code":"# What is the resolution of this H3 cell index? get_res(h3_address = '8abe8d12acaffff') #> [1] 10"},{"path":"https://obrl-soil.github.io/h3jsr/reference/get_res0.html","id":null,"dir":"Reference","previous_headings":"","what":"Get resolution 0 indexes — get_res0","title":"Get resolution 0 indexes — get_res0","text":"Get H3 cell indexes resolution 0.","code":""},{"path":"https://obrl-soil.github.io/h3jsr/reference/get_res0.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get resolution 0 indexes — get_res0","text":"","code":"get_res0()"},{"path":"https://obrl-soil.github.io/h3jsr/reference/get_res0.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get resolution 0 indexes — get_res0","text":"length 122 character vector top-level H3 cell indices.","code":""},{"path":"https://obrl-soil.github.io/h3jsr/reference/get_res0.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Get resolution 0 indexes — get_res0","text":"every index every resolution > 0 descendant res 0 index, can used get_children iterate H3 indexes resolution.","code":""},{"path":"https://obrl-soil.github.io/h3jsr/reference/get_res0.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get resolution 0 indexes — get_res0","text":"","code":"res0 <- get_res0() cell_area(res0[1], 'km2') #> [1] 4106166"},{"path":"https://obrl-soil.github.io/h3jsr/reference/get_ring.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a ring of H3 cell indexes — get_ring","title":"Get a ring of H3 cell indexes — get_ring","text":"function returns H3 cell indexes specified step address supplied.","code":""},{"path":"https://obrl-soil.github.io/h3jsr/reference/get_ring.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a ring of H3 cell indexes — get_ring","text":"","code":"get_ring(h3_address = NULL, ring_size = 1, simple = TRUE)"},{"path":"https://obrl-soil.github.io/h3jsr/reference/get_ring.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a ring of H3 cell indexes — get_ring","text":"h3_address Character; 15-character cell index generated H3. ring_size Character; number steps away central cell. Defaults 1. simple Logical; whether return vector outputs data frame containing inputs outputs.","code":""},{"path":"https://obrl-soil.github.io/h3jsr/reference/get_ring.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a ring of H3 cell indexes — get_ring","text":"default, list length(h3_address). list element   contains character vector H3 cells belonging step away   input address.","code":""},{"path":"https://obrl-soil.github.io/h3jsr/reference/get_ring.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Get a ring of H3 cell indexes — get_ring","text":"total, number cells returned input index   ring_size * 6. function throw error   pentagon anywhere ring.","code":""},{"path":"https://obrl-soil.github.io/h3jsr/reference/get_ring.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a ring of H3 cell indexes — get_ring","text":"","code":"# What are the neighbours of this cell at step 2? get_ring(h3_address = '86be8d12fffffff', ring_size = 2) #> [[1]] #>  [1] \"86be8d8f7ffffff\" \"86be8d88fffffff\" \"86be8d89fffffff\" \"86be8d137ffffff\" #>  [5] \"86be8d117ffffff\" \"86be8d11fffffff\" \"86be8d027ffffff\" \"86be8d157ffffff\" #>  [9] \"86be8d147ffffff\" \"86be8d167ffffff\" \"86be8d8cfffffff\" \"86be8d8c7ffffff\" #>"},{"path":"https://obrl-soil.github.io/h3jsr/reference/get_uddest.html","id":null,"dir":"Reference","previous_headings":"","what":"Get destination cell from directed edge — get_uddest","title":"Get destination cell from directed edge — get_uddest","text":"Get H3 index representing destination directed edge.","code":""},{"path":"https://obrl-soil.github.io/h3jsr/reference/get_uddest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get destination cell from directed edge — get_uddest","text":"","code":"get_uddest(h3_edge = NULL, simple = TRUE)"},{"path":"https://obrl-soil.github.io/h3jsr/reference/get_uddest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get destination cell from directed edge — get_uddest","text":"h3_edge Character; address unidirectional edge. simple Logical; whether return vector outputs data frame containing inputs outputs.","code":""},{"path":"https://obrl-soil.github.io/h3jsr/reference/get_uddest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get destination cell from directed edge — get_uddest","text":"default, character vector h3 cell indexes.","code":""},{"path":"https://obrl-soil.github.io/h3jsr/reference/get_uddest.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get destination cell from directed edge — get_uddest","text":"","code":"# Get the destination cell index of this directed edge index get_uddest(h3_edge = '166be8d12fffffff') #> [1] \"86be8d127ffffff\""},{"path":"https://obrl-soil.github.io/h3jsr/reference/get_udedge.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a unidirectional edge index — get_udedge","title":"Get a unidirectional edge index — get_udedge","text":"Returns H3 index representing unidirectional edge given origin destination cell pair.","code":""},{"path":"https://obrl-soil.github.io/h3jsr/reference/get_udedge.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a unidirectional edge index — get_udedge","text":"","code":"get_udedge(origin = NULL, destination = NULL, simple = TRUE)"},{"path":"https://obrl-soil.github.io/h3jsr/reference/get_udedge.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a unidirectional edge index — get_udedge","text":"origin Character; 15-character cell index generated H3. vector indexes can also supplied. destination Character; 15-character cell index generated H3. vector indexes can also supplied. simple Logical; whether return vector outputs data frame containing inputs outputs.","code":""},{"path":"https://obrl-soil.github.io/h3jsr/reference/get_udedge.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a unidirectional edge index — get_udedge","text":"default, character vector unidirectional edge indexes.","code":""},{"path":"https://obrl-soil.github.io/h3jsr/reference/get_udedge.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Get a unidirectional edge index — get_udedge","text":"number cell indexes supplied origin destination must   equal.","code":""},{"path":"https://obrl-soil.github.io/h3jsr/reference/get_udedge.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a unidirectional edge index — get_udedge","text":"","code":"# Return the unidirectional edge representing the transition between these two cells: get_udedge(origin = '86be8d12fffffff', destination = '86be8d127ffffff') #> [1] \"166be8d12fffffff\""},{"path":"https://obrl-soil.github.io/h3jsr/reference/get_udedges.html","id":null,"dir":"Reference","previous_headings":"","what":"Get all directed edge indexes for a given H3 cell — get_udedges","title":"Get all directed edge indexes for a given H3 cell — get_udedges","text":"Get directed edge indexes given H3 cell index.","code":""},{"path":"https://obrl-soil.github.io/h3jsr/reference/get_udedges.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get all directed edge indexes for a given H3 cell — get_udedges","text":"","code":"get_udedges(h3_address = NULL, simple = TRUE)"},{"path":"https://obrl-soil.github.io/h3jsr/reference/get_udedges.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get all directed edge indexes for a given H3 cell — get_udedges","text":"h3_address Character; 15-character index generated H3. simple Logical; whether return vector outputs data frame containing inputs outputs.","code":""},{"path":"https://obrl-soil.github.io/h3jsr/reference/get_udedges.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get all directed edge indexes for a given H3 cell — get_udedges","text":"default, list length(h3_address). list contains   character vector H3 edge indexes.","code":""},{"path":"https://obrl-soil.github.io/h3jsr/reference/get_udedges.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get all directed edge indexes for a given H3 cell — get_udedges","text":"","code":"# Get all the edge indexes for this cell get_udedges(h3_address = '86be8d12fffffff') #> [[1]] #> [1] \"116be8d12fffffff\" \"126be8d12fffffff\" \"136be8d12fffffff\" \"146be8d12fffffff\" #> [5] \"156be8d12fffffff\" \"166be8d12fffffff\" #>"},{"path":"https://obrl-soil.github.io/h3jsr/reference/get_udends.html","id":null,"dir":"Reference","previous_headings":"","what":"Get origin and destination indexes of directed edge — get_udends","title":"Get origin and destination indexes of directed edge — get_udends","text":"Get H3 cell indexes representing origin destination directed edge index.","code":""},{"path":"https://obrl-soil.github.io/h3jsr/reference/get_udends.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get origin and destination indexes of directed edge — get_udends","text":"","code":"get_udends(h3_edge = NULL, simple = TRUE)"},{"path":"https://obrl-soil.github.io/h3jsr/reference/get_udends.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get origin and destination indexes of directed edge — get_udends","text":"h3_edge Character; address unidirectional edge. simple Logical; whether return vector outputs data frame containing inputs outputs.","code":""},{"path":"https://obrl-soil.github.io/h3jsr/reference/get_udends.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get origin and destination indexes of directed edge — get_udends","text":"default, character matrix h3 cell indexes.","code":""},{"path":"https://obrl-soil.github.io/h3jsr/reference/get_udends.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get origin and destination indexes of directed edge — get_udends","text":"","code":"# Get the origin and destination of this directed edge get_udends(h3_edge = '166be8d12fffffff') #> [[1]] #> [1] \"86be8d12fffffff\" \"86be8d127ffffff\" #>"},{"path":"https://obrl-soil.github.io/h3jsr/reference/get_udorigin.html","id":null,"dir":"Reference","previous_headings":"","what":"Get origin cell index from directed edge — get_udorigin","title":"Get origin cell index from directed edge — get_udorigin","text":"Get H3 cell index representing origin directed edge.","code":""},{"path":"https://obrl-soil.github.io/h3jsr/reference/get_udorigin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get origin cell index from directed edge — get_udorigin","text":"","code":"get_udorigin(h3_edge = NULL, simple = TRUE)"},{"path":"https://obrl-soil.github.io/h3jsr/reference/get_udorigin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get origin cell index from directed edge — get_udorigin","text":"h3_edge Character; address unidirectional edge. simple Logical; whether return vector outputs data frame containing inputs outputs.","code":""},{"path":"https://obrl-soil.github.io/h3jsr/reference/get_udorigin.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get origin cell index from directed edge — get_udorigin","text":"default, character vector H3 indexes.","code":""},{"path":"https://obrl-soil.github.io/h3jsr/reference/get_udorigin.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get origin cell index from directed edge — get_udorigin","text":"","code":"# Get the origin cell of this directed edge get_udorigin(h3_edge = '166be8d12fffffff') #> [1] \"86be8d12fffffff\""},{"path":"https://obrl-soil.github.io/h3jsr/reference/grid_distance.html","id":null,"dir":"Reference","previous_headings":"","what":"Grid distance between H3 cells — grid_distance","title":"Grid distance between H3 cells — grid_distance","text":"function gets grid distance two H3 cell indices.","code":""},{"path":"https://obrl-soil.github.io/h3jsr/reference/grid_distance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Grid distance between H3 cells — grid_distance","text":"","code":"grid_distance(origin = NULL, destination = NULL, simple = TRUE)"},{"path":"https://obrl-soil.github.io/h3jsr/reference/grid_distance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Grid distance between H3 cells — grid_distance","text":"origin Character vector list 15-character indices generated H3. destination Character vector list 15-character indices generated H3. simple Logical; whether return vector outputs list object containing inputs outputs.","code":""},{"path":"https://obrl-soil.github.io/h3jsr/reference/grid_distance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Grid distance between H3 cells — grid_distance","text":"distance two H3 cells, expressed minimum   number hexagon 'steps' required get origin   destination. Thus, neighbour cell one step away, two cells   one hexagon two steps apart.","code":""},{"path":"https://obrl-soil.github.io/h3jsr/reference/grid_distance.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Grid distance between H3 cells — grid_distance","text":"Input H3 indices must resolution results   computed. function may fail find distance two indices   far apart opposite sides pentagon.","code":""},{"path":"https://obrl-soil.github.io/h3jsr/reference/grid_distance.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Grid distance between H3 cells — grid_distance","text":"","code":"if (FALSE) { nc <- sf::st_read(system.file(\"shape/nc.shp\", package=\"sf\"), quiet = TRUE) nc_pts <- sf::st_centroid(nc[c(1, 2), ]) nc_6 <- point_to_cell(nc_pts, res = 6) # how far apart are these two addresses? grid_distance(nc_6[1], nc_6[2]) }"},{"path":"https://obrl-soil.github.io/h3jsr/reference/grid_path.html","id":null,"dir":"Reference","previous_headings":"","what":"Path between H3 cells — grid_path","title":"Path between H3 cells — grid_path","text":"function returns path H3 cells start end cell (inclusive).","code":""},{"path":"https://obrl-soil.github.io/h3jsr/reference/grid_path.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Path between H3 cells — grid_path","text":"","code":"grid_path(origin = NULL, destination = NULL, simple = TRUE)"},{"path":"https://obrl-soil.github.io/h3jsr/reference/grid_path.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Path between H3 cells — grid_path","text":"origin Character vector list 15-character indices generated H3. destination Character vector list 15-character indices generated H3. simple Logical; whether return vector outputs list object containing inputs outputs.","code":""},{"path":"https://obrl-soil.github.io/h3jsr/reference/grid_path.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Path between H3 cells — grid_path","text":"vector h3 cells form c(origin, c(path), destination).","code":""},{"path":"https://obrl-soil.github.io/h3jsr/reference/grid_path.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Path between H3 cells — grid_path","text":"Input H3 cells must resolution results   computed. function may fail find distance two   indexes far apart opposite sides pentagon. specific output function considered stable   across library versions. guarantees library provides   line length h3_distance(start, end) + 1 every   index line neighbor preceding index. Lines drawn grid space, may correspond exactly   either Cartesian lines great arcs","code":""},{"path":"https://obrl-soil.github.io/h3jsr/reference/grid_path.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Path between H3 cells — grid_path","text":"","code":"if (FALSE) { nc <- sf::st_read(system.file(\"shape/nc.shp\", package=\"sf\"), quiet = TRUE) nc_pts <- sf::st_centroid(nc[c(1, 2), ]) nc_6 <- point_to_cell(nc_pts, res = 6) # find a path between these two addresses: grid_path(nc_6[1], nc_6[2], simple = TRUE)  }"},{"path":"https://obrl-soil.github.io/h3jsr/reference/h3_info_table.html","id":null,"dir":"Reference","previous_headings":"","what":"H3 index utility information table — h3_info_table","title":"H3 index utility information table — h3_info_table","text":"dataset containing information h3 cell indexes resolution, calculated using H3's built-functions.","code":""},{"path":"https://obrl-soil.github.io/h3jsr/reference/h3_info_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"H3 index utility information table — h3_info_table","text":"","code":"h3_info_table"},{"path":"https://obrl-soil.github.io/h3jsr/reference/h3_info_table.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"H3 index utility information table — h3_info_table","text":"data frame 16 rows 6 variables: h3_resolution H3 resolution index number avg_area_sqm Average area H3 cell index given     resolution, square meters. avg_area_sqkm Average area     H3 cell index given resolution, square kilometers. avg_edge_m Average edge length H3 cell index given     resolution, meters. avg_edge_km Average edge length H3     cell index given resolution, kilometers. avg_cendist_m Average distance cell centers given     resolution, meters. avg_cendist_km Average distance cellcenters given     resolution, kilometers. total_unique_indexes Total number H3 cells given   resolution.","code":""},{"path":"https://obrl-soil.github.io/h3jsr/reference/h3_info_table.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"H3 index utility information table — h3_info_table","text":"See also   https://h3geo.org/docs/core-library/restable/","code":""},{"path":"https://obrl-soil.github.io/h3jsr/reference/h3jsr-package.html","id":null,"dir":"Reference","previous_headings":"","what":"h3jsr: Access Uber's H3 library — h3jsr-package","title":"h3jsr: Access Uber's H3 library — h3jsr-package","text":"package uses package V8 access javascript bindings Uber's H3 library","code":""},{"path":[]},{"path":"https://obrl-soil.github.io/h3jsr/reference/h3jsr-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"h3jsr: Access Uber's H3 library — h3jsr-package","text":"Maintainer: Lauren O'Brien obrlsoilau@gmail.com (ORCID)","code":""},{"path":"https://obrl-soil.github.io/h3jsr/reference/is_pentagon.html","id":null,"dir":"Reference","previous_headings":"","what":"check if H3 cell index is a pentagon — is_pentagon","title":"check if H3 cell index is a pentagon — is_pentagon","text":"function checks whether H3 cell index refers one pentagons occur icosahedron corners.","code":""},{"path":"https://obrl-soil.github.io/h3jsr/reference/is_pentagon.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"check if H3 cell index is a pentagon — is_pentagon","text":"","code":"is_pentagon(h3_address = NULL, simple = TRUE)"},{"path":"https://obrl-soil.github.io/h3jsr/reference/is_pentagon.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"check if H3 cell index is a pentagon — is_pentagon","text":"h3_address Character; 15-character index generated H3. simple Logical; whether return vector outputs data frame containing inputs outputs.","code":""},{"path":"https://obrl-soil.github.io/h3jsr/reference/is_pentagon.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"check if H3 cell index is a pentagon — is_pentagon","text":"default, logical vector length(h3_address).","code":""},{"path":"https://obrl-soil.github.io/h3jsr/reference/is_pentagon.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"check if H3 cell index is a pentagon — is_pentagon","text":"","code":"# is the following cell index a pentagon? is_pentagon(h3_address = '8abe8d12acaffff') #> [1] FALSE"},{"path":"https://obrl-soil.github.io/h3jsr/reference/is_rc3.html","id":null,"dir":"Reference","previous_headings":"","what":"check if H3 cell index is in a Class III resolution — is_rc3","title":"check if H3 cell index is in a Class III resolution — is_rc3","text":"function checks whether H3 cell index Class III resolution (rotated versus icosahedron subject shape distortion adding extra points icosahedron edges).","code":""},{"path":"https://obrl-soil.github.io/h3jsr/reference/is_rc3.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"check if H3 cell index is in a Class III resolution — is_rc3","text":"","code":"is_rc3(h3_address = NULL, simple = TRUE)"},{"path":"https://obrl-soil.github.io/h3jsr/reference/is_rc3.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"check if H3 cell index is in a Class III resolution — is_rc3","text":"h3_address Character; 15-character index generated H3. simple Logical; whether return vector outputs data frame containing inputs outputs.","code":""},{"path":"https://obrl-soil.github.io/h3jsr/reference/is_rc3.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"check if H3 cell index is in a Class III resolution — is_rc3","text":"default, logical vector length(h3_address).","code":""},{"path":"https://obrl-soil.github.io/h3jsr/reference/is_rc3.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"check if H3 cell index is in a Class III resolution — is_rc3","text":"","code":"# is the following cell index Class III? is_rc3(h3_address = '8abe8d12acaffff') #> [1] FALSE"},{"path":"https://obrl-soil.github.io/h3jsr/reference/is_valid.html","id":null,"dir":"Reference","previous_headings":"","what":"check H3 cell index — is_valid","title":"check H3 cell index — is_valid","text":"function checks whether H3 cell index valid.","code":""},{"path":"https://obrl-soil.github.io/h3jsr/reference/is_valid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"check H3 cell index — is_valid","text":"","code":"is_valid(h3_address = NULL, simple = TRUE)"},{"path":"https://obrl-soil.github.io/h3jsr/reference/is_valid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"check H3 cell index — is_valid","text":"h3_address Character; 15-character index generated H3. simple Logical; whether return vector outputs data frame containing inputs outputs.","code":""},{"path":"https://obrl-soil.github.io/h3jsr/reference/is_valid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"check H3 cell index — is_valid","text":"default, logical vector length(h3_address).","code":""},{"path":"https://obrl-soil.github.io/h3jsr/reference/is_valid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"check H3 cell index — is_valid","text":"","code":"# is the following cell index valid? is_valid(h3_address = '8abe8d12acaffff') #> [1] TRUE"},{"path":"https://obrl-soil.github.io/h3jsr/reference/is_valid_edge.html","id":null,"dir":"Reference","previous_headings":"","what":"Check H3 unidirectional edge index — is_valid_edge","title":"Check H3 unidirectional edge index — is_valid_edge","text":"function checks whether H3 unidirectional edge index valid.","code":""},{"path":"https://obrl-soil.github.io/h3jsr/reference/is_valid_edge.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check H3 unidirectional edge index — is_valid_edge","text":"","code":"is_valid_edge(h3_edge = NULL, simple = TRUE)"},{"path":"https://obrl-soil.github.io/h3jsr/reference/is_valid_edge.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check H3 unidirectional edge index — is_valid_edge","text":"h3_edge Character; address unidirectional edge. simple Logical; whether return vector outputs data frame containing inputs outputs.","code":""},{"path":"https://obrl-soil.github.io/h3jsr/reference/is_valid_edge.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check H3 unidirectional edge index — is_valid_edge","text":"default, logical vector length(h3_edge).","code":""},{"path":"https://obrl-soil.github.io/h3jsr/reference/is_valid_edge.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check H3 unidirectional edge index — is_valid_edge","text":"","code":"# is the following unidirectional edge index valid? is_valid_edge(h3_edge = '166be8d12fffffff') #> [1] TRUE"},{"path":"https://obrl-soil.github.io/h3jsr/reference/is_valid_vertex.html","id":null,"dir":"Reference","previous_headings":"","what":"check H3 cell index — is_valid_vertex","title":"check H3 cell index — is_valid_vertex","text":"function checks whether H3 cell index valid.","code":""},{"path":"https://obrl-soil.github.io/h3jsr/reference/is_valid_vertex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"check H3 cell index — is_valid_vertex","text":"","code":"is_valid_vertex(h3_vertex = NULL, simple = TRUE)"},{"path":"https://obrl-soil.github.io/h3jsr/reference/is_valid_vertex.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"check H3 cell index — is_valid_vertex","text":"h3_vertex Character; 15-character index generated H3. simple Logical; whether return vector outputs data frame containing inputs outputs.","code":""},{"path":"https://obrl-soil.github.io/h3jsr/reference/is_valid_vertex.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"check H3 cell index — is_valid_vertex","text":"default, logical vector length(h3_vertex).","code":""},{"path":"https://obrl-soil.github.io/h3jsr/reference/is_valid_vertex.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"check H3 cell index — is_valid_vertex","text":"","code":"# is the following cell index valid? is_valid_vertex(h3_vertex = '25abe8d12ac87fff') #> [1] TRUE"},{"path":"https://obrl-soil.github.io/h3jsr/reference/num_cells.html","id":null,"dir":"Reference","previous_headings":"","what":"Get total H3 cells — num_cells","title":"Get total H3 cells — num_cells","text":"function returns total number H3 cells given resolution.","code":""},{"path":"https://obrl-soil.github.io/h3jsr/reference/num_cells.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get total H3 cells — num_cells","text":"","code":"num_cells(res = NULL, fast = TRUE)"},{"path":"https://obrl-soil.github.io/h3jsr/reference/num_cells.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get total H3 cells — num_cells","text":"res Integer; Desired H3 resolution. See https://h3geo.org/docs/core-library/restable/ allowable values related dimensions. fast Logical; whether retrieve values locally stored table recalculate source.","code":""},{"path":"https://obrl-soil.github.io/h3jsr/reference/num_cells.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get total H3 cells — num_cells","text":"Numeric; H3 cell count.","code":""},{"path":"https://obrl-soil.github.io/h3jsr/reference/num_cells.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Get total H3 cells — num_cells","text":"resolution 8 exact count represented   JavaScript 32-bit number, consumers use caution applying   operations output.","code":""},{"path":"https://obrl-soil.github.io/h3jsr/reference/num_cells.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get total H3 cells — num_cells","text":"","code":"# Return cell count for resolution 8 num_cells(res = 8) #> [1] 691776122"},{"path":"https://obrl-soil.github.io/h3jsr/reference/point_to_cell.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert point location to H3 cell index — point_to_cell","title":"Convert point location to H3 cell index — point_to_cell","text":"function takes point location data returns H3 cell index point chosen resolution(s).","code":""},{"path":"https://obrl-soil.github.io/h3jsr/reference/point_to_cell.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert point location to H3 cell index — point_to_cell","text":"","code":"point_to_cell(input = NULL, res = NULL, simple = TRUE)"},{"path":"https://obrl-soil.github.io/h3jsr/reference/point_to_cell.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert point location to H3 cell index — point_to_cell","text":"input sf object point geometry, sfc_POINT object, sfg point, data frame matrix. res Integer; Desired H3 resolution. See https://h3geo.org/docs/core-library/restable/ allowable values related dimensions. simple Logical; whether return outputs character vector possible.","code":""},{"path":"https://obrl-soil.github.io/h3jsr/reference/point_to_cell.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert point location to H3 cell index — point_to_cell","text":"simple = TRUE one resolution requested, character vector H3 addresses. simple = TRUE multiple resolutions requested, data frame H3 addresses. simple = FALSE matrix, sfc sfg object supplied, data frame H3 addresses. simple = FALSE data frame sf object attributes supplied, data frame non-spatial attributes new columns containing addresses one H3 resolutions.","code":""},{"path":"https://obrl-soil.github.io/h3jsr/reference/point_to_cell.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Convert point location to H3 cell index — point_to_cell","text":"multiple resolutions can requested multiple points,   aware memory demand large datasets.","code":""},{"path":"https://obrl-soil.github.io/h3jsr/reference/point_to_cell.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert point location to H3 cell index — point_to_cell","text":"","code":"# where is the Brisbane Town Hall at resolution 15? bth <- sf::st_sfc(sf::st_point(c(153.023503, -27.468920)), crs = 4326) bth_15 <- point_to_cell(bth, res = 15)  # where is it at several resolutions? bth_many <- point_to_cell(bth, res = seq(10, 15), simple = FALSE)"},{"path":"https://obrl-soil.github.io/h3jsr/reference/polygon_to_cells.html","id":null,"dir":"Reference","previous_headings":"","what":"Get H3 cell index within a polygon — polygon_to_cells","title":"Get H3 cell index within a polygon — polygon_to_cells","text":"function returns H3 cell indexes within supplied polygon geometry.","code":""},{"path":"https://obrl-soil.github.io/h3jsr/reference/polygon_to_cells.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get H3 cell index within a polygon — polygon_to_cells","text":"","code":"polygon_to_cells(geometry = NULL, res = NULL, simple = TRUE)"},{"path":"https://obrl-soil.github.io/h3jsr/reference/polygon_to_cells.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get H3 cell index within a polygon — polygon_to_cells","text":"geometry sf object type POLYGON MULTIPOLYGON. res Integer; Desired H3 resolution. See https://h3geo.org/docs/core-library/restable/ allowable values related dimensions. simple Logical; whether return vector outputs sf object containing inputs outputs.","code":""},{"path":"https://obrl-soil.github.io/h3jsr/reference/polygon_to_cells.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get H3 cell index within a polygon — polygon_to_cells","text":"default, list length(h3_address). list element   contains character vector H3 cell indices belonging geometry.   result NA indicates H3 cell indices chosen resolution   centered geometry.","code":""},{"path":"https://obrl-soil.github.io/h3jsr/reference/polygon_to_cells.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Get H3 cell index within a polygon — polygon_to_cells","text":"function slow large number polygons, /  polygons large relative hexagon area chosen   resolution. message printed console total input area   (roughly) > 100000x area chosen H3 resolution.","code":""},{"path":"https://obrl-soil.github.io/h3jsr/reference/polygon_to_cells.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get H3 cell index within a polygon — polygon_to_cells","text":"","code":"# Which level 5 H3 cell indices have centers inside County Ashe, NC? nc <- sf::st_read(system.file(\"shape/nc.shp\", package=\"sf\"), quiet = TRUE) nc1 <- nc[1, ] fillers <- polygon_to_cells(geometry = nc1, res = 5) #> Data has been transformed to EPSG:4326."},{"path":"https://obrl-soil.github.io/h3jsr/reference/prep_for_polyfill.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare geometry for polygon_to_cells — prep_for_polyfill","title":"Prepare geometry for polygon_to_cells — prep_for_polyfill","text":"Converts variety possible input geometries geojson h3jsr::polygon_to_cells().","code":""},{"path":"https://obrl-soil.github.io/h3jsr/reference/prep_for_polyfill.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare geometry for polygon_to_cells — prep_for_polyfill","text":"","code":"prep_for_polyfill(polys = NULL)  # S3 method for sf prep_for_polyfill(polys = NULL)  # S3 method for sfc prep_for_polyfill(polys = NULL)  # S3 method for sfg prep_for_polyfill(polys = NULL)"},{"path":"https://obrl-soil.github.io/h3jsr/reference/prep_for_polyfill.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare geometry for polygon_to_cells — prep_for_polyfill","text":"polys sf, sfc sfg POLYGON/MULTIPOLYGON object.","code":""},{"path":"https://obrl-soil.github.io/h3jsr/reference/prep_for_polyfill.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare geometry for polygon_to_cells — prep_for_polyfill","text":"`geojson` representation supplied geometry.","code":""},{"path":"https://obrl-soil.github.io/h3jsr/reference/prep_for_pt2cell.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare inputs for point_to_cell — prep_for_pt2cell","title":"Prepare inputs for point_to_cell — prep_for_pt2cell","text":"Sets variety possible input objects h3jsr::point_to_cell().","code":""},{"path":"https://obrl-soil.github.io/h3jsr/reference/prep_for_pt2cell.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare inputs for point_to_cell — prep_for_pt2cell","text":"","code":"prep_for_pt2cell(input = NULL)  # S3 method for sf prep_for_pt2cell(input = NULL)  # S3 method for sfc prep_for_pt2cell(input = NULL)  # S3 method for sfg prep_for_pt2cell(input = NULL)  # S3 method for matrix prep_for_pt2cell(input = NULL)  # S3 method for data.frame prep_for_pt2cell(input = NULL)  # S3 method for numeric prep_for_pt2cell(input = NULL)"},{"path":"https://obrl-soil.github.io/h3jsr/reference/prep_for_pt2cell.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare inputs for point_to_cell — prep_for_pt2cell","text":"input sf, sfc sfg POINT/MULTIPOINT object, data frame matrix. Data frames matrices must x, y coordinates first two columns. WGS84 input assumed cases.","code":""},{"path":"https://obrl-soil.github.io/h3jsr/reference/prep_for_pt2cell.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare inputs for point_to_cell — prep_for_pt2cell","text":"matrix representation supplied coordinates.","code":""},{"path":"https://obrl-soil.github.io/h3jsr/reference/rads_to_degs.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert radians to degrees — rads_to_degs","title":"Convert radians to degrees — rads_to_degs","text":"Convert radians degrees.","code":""},{"path":"https://obrl-soil.github.io/h3jsr/reference/rads_to_degs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert radians to degrees — rads_to_degs","text":"","code":"rads_to_degs(radian = NULL, lang = c(\"r\", \"h3\"), simple = TRUE)"},{"path":"https://obrl-soil.github.io/h3jsr/reference/rads_to_degs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert radians to degrees — rads_to_degs","text":"radian Numeric, value radians lang Character; whether perform conversion using base R H3 library. Defaults R speed. simple Logical; whether return vector data frame containing inputs outputs.","code":""},{"path":"https://obrl-soil.github.io/h3jsr/reference/rads_to_degs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert radians to degrees — rads_to_degs","text":"Numeric, value degrees","code":""},{"path":"https://obrl-soil.github.io/h3jsr/reference/rads_to_degs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert radians to degrees — rads_to_degs","text":"","code":"rads_to_degs(1.5) #> [1] 85.94367"},{"path":"https://obrl-soil.github.io/h3jsr/reference/res_area.html","id":null,"dir":"Reference","previous_headings":"","what":"Get average cell area — res_area","title":"Get average cell area — res_area","text":"function returns average area H3 cell given resolution.","code":""},{"path":"https://obrl-soil.github.io/h3jsr/reference/res_area.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get average cell area — res_area","text":"","code":"res_area(res = NULL, units = c(\"m2\", \"km2\"), fast = TRUE)"},{"path":"https://obrl-soil.github.io/h3jsr/reference/res_area.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get average cell area — res_area","text":"res Integer; Desired H3 resolution. See https://h3geo.org/docs/core-library/restable/ allowable values related dimensions. units Areal unit report . Options square meters square kilometers. fast Logical; whether retrieve values locally stored table reclaculate source.","code":""},{"path":"https://obrl-soil.github.io/h3jsr/reference/res_area.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get average cell area — res_area","text":"Numeric; average H3 cell area.","code":""},{"path":"https://obrl-soil.github.io/h3jsr/reference/res_area.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get average cell area — res_area","text":"","code":"# Return average H3 cell area at each resolution in square meters res_area(res = seq(0, 15), units = 'm2') #>  [1] 4.357449e+12 6.097884e+11 8.680178e+10 1.239343e+10 1.770348e+09 #>  [6] 2.529039e+08 3.612906e+07 5.161293e+06 7.373276e+05 1.053325e+05 #> [11] 1.504750e+04 2.149643e+03 3.070919e+02 4.387027e+01 6.267181e+00 #> [16] 8.953116e-01"},{"path":"https://obrl-soil.github.io/h3jsr/reference/res_cendist.html","id":null,"dir":"Reference","previous_headings":"","what":"Get average distance between H3 cell centers — res_cendist","title":"Get average distance between H3 cell centers — res_cendist","text":"function returns average distance center H3 cells  given resolution.","code":""},{"path":"https://obrl-soil.github.io/h3jsr/reference/res_cendist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get average distance between H3 cell centers — res_cendist","text":"","code":"res_cendist(res = NULL, units = c(\"m\", \"km\"), fast = TRUE)"},{"path":"https://obrl-soil.github.io/h3jsr/reference/res_cendist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get average distance between H3 cell centers — res_cendist","text":"res Integer; Desired H3 resolution. See https://h3geo.org/docs/core-library/restable/ allowable values related dimensions. units Length unit report , either meters kilometers. fast Logical; whether retrieve values locally stored table recalculate source.","code":""},{"path":"https://obrl-soil.github.io/h3jsr/reference/res_cendist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get average distance between H3 cell centers — res_cendist","text":"Numeric; H3 cell center separation distance.","code":""},{"path":"https://obrl-soil.github.io/h3jsr/reference/res_cendist.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Get average distance between H3 cell centers — res_cendist","text":"core library may useful.","code":""},{"path":"https://obrl-soil.github.io/h3jsr/reference/res_cendist.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get average distance between H3 cell centers — res_cendist","text":"","code":"# Return average H3 cell separation distance at each resolution in kilometers res_cendist(res = seq(0, 15), units = 'km') #>  [1] 1.918614e+03 7.251681e+02 2.740878e+02 1.035954e+02 3.915540e+01 #>  [6] 1.479935e+01 5.593628e+00 2.114193e+00 7.990898e-01 3.020275e-01 #> [11] 1.141557e-01 4.314636e-02 1.630817e-02 6.165916e-03 2.335800e-03 #> [16] 8.828488e-04"},{"path":"https://obrl-soil.github.io/h3jsr/reference/res_length.html","id":null,"dir":"Reference","previous_headings":"","what":"Get average cell edge length — res_length","title":"Get average cell edge length — res_length","text":"function returns average edge length H3 cell edge given resolution.","code":""},{"path":"https://obrl-soil.github.io/h3jsr/reference/res_length.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get average cell edge length — res_length","text":"","code":"res_length(res = NULL, units = c(\"m\", \"km\"), fast = TRUE)"},{"path":"https://obrl-soil.github.io/h3jsr/reference/res_length.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get average cell edge length — res_length","text":"res Integer; Desired H3 resolution. See https://h3geo.org/docs/core-library/restable/ allowable values related dimensions. units Length unit report . Options meters kilometers. fast Logical; whether retrieve values locally stored table recalculate source.","code":""},{"path":"https://obrl-soil.github.io/h3jsr/reference/res_length.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get average cell edge length — res_length","text":"Numeric; H3 cell edge length","code":""},{"path":"https://obrl-soil.github.io/h3jsr/reference/res_length.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Get average cell edge length — res_length","text":"value also hexagon circumradius.","code":""},{"path":"https://obrl-soil.github.io/h3jsr/reference/res_length.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get average cell edge length — res_length","text":"","code":"# Return average H3 cell edge length at each resolution in kilometers res_length(res = seq(0, 15), units = 'km') #>  [1] 1.107713e+03 4.186760e+02 1.582447e+02 5.981086e+01 2.260638e+01 #>  [6] 8.544408e+00 3.229483e+00 1.220630e+00 4.613547e-01 1.743757e-01 #> [11] 6.590781e-02 2.491056e-02 9.415526e-03 3.559893e-03 1.348575e-03 #> [16] 5.097130e-04"},{"path":"https://obrl-soil.github.io/h3jsr/reference/splitlong_to_cell.html","id":null,"dir":"Reference","previous_headings":"","what":"Split long to H3 cell — splitlong_to_cell","title":"Split long to H3 cell — splitlong_to_cell","text":"Convert \"split long\" - pair 32-bit integers - H3 cell index.","code":""},{"path":"https://obrl-soil.github.io/h3jsr/reference/splitlong_to_cell.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Split long to H3 cell — splitlong_to_cell","text":"","code":"splitlong_to_cell(split_lower = NULL, split_upper = NULL, simple = TRUE)"},{"path":"https://obrl-soil.github.io/h3jsr/reference/splitlong_to_cell.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Split long to H3 cell — splitlong_to_cell","text":"split_lower Integer; Lower 32 bits H3 index. split_upper Integer; Upper 32 bits H3 index. simple Logical; whether return vector data frame containing inputs outputs.","code":""},{"path":"https://obrl-soil.github.io/h3jsr/reference/splitlong_to_cell.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Split long to H3 cell — splitlong_to_cell","text":"Vector H3 addresses, one split long pair supplied.","code":""},{"path":"https://obrl-soil.github.io/h3jsr/reference/splitlong_to_cell.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Split long to H3 cell — splitlong_to_cell","text":"","code":"x <- cell_to_splitlong(h3_address = '8abe8d12acaffff')  splitlong_to_cell(split_lower = x[[1]][1], split_upper = x[[1]][2]) #> [1] \"8abe8d12acaffff\""},{"path":"https://obrl-soil.github.io/h3jsr/reference/udedge_to_line.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the geometry of an H3 edge — udedge_to_line","title":"Get the geometry of an H3 edge — udedge_to_line","text":"function takes H3 unidirectional edge address returns coordinates geometry WGS84.","code":""},{"path":"https://obrl-soil.github.io/h3jsr/reference/udedge_to_line.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the geometry of an H3 edge — udedge_to_line","text":"","code":"udedge_to_line(h3_edge = NULL, simple = TRUE)"},{"path":"https://obrl-soil.github.io/h3jsr/reference/udedge_to_line.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the geometry of an H3 edge — udedge_to_line","text":"h3_edge Character; address unidirectional edge. simple Logical; whether return vector outputs data frame containing inputs outputs.","code":""},{"path":"https://obrl-soil.github.io/h3jsr/reference/udedge_to_line.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the geometry of an H3 edge — udedge_to_line","text":"default, object type `sfc_LINESTRING`.","code":""},{"path":"https://obrl-soil.github.io/h3jsr/reference/udedge_to_line.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the geometry of an H3 edge — udedge_to_line","text":"","code":"# get me the shape of this edge udedge_to_line(h3_edge = '166be8d12fffffff') #> Geometry set for 1 feature  #> Geometry type: LINESTRING #> Dimension:     XY #> Bounding box:  xmin: 153.039 ymin: -27.51385 xmax: 153.0433 ymax: -27.47774 #> Geodetic CRS:  WGS 84 #> LINESTRING (153.039 -27.51385, 153.0433 -27.47774)"},{"path":"https://obrl-soil.github.io/h3jsr/reference/uncompact.html","id":null,"dir":"Reference","previous_headings":"","what":"Uncompact H3 cell indices — uncompact","title":"Uncompact H3 cell indices — uncompact","text":"function uncompacts compacted set H3 cells indices target resolution.","code":""},{"path":"https://obrl-soil.github.io/h3jsr/reference/uncompact.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Uncompact H3 cell indices — uncompact","text":"","code":"uncompact(h3_addresses = NULL, res = NULL, simple = TRUE)"},{"path":"https://obrl-soil.github.io/h3jsr/reference/uncompact.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Uncompact H3 cell indices — uncompact","text":"h3_addresses Character vector list 15-character cell indices generated H3. res Integer; Desired H3 resolution. See https://h3geo.org/docs/core-library/restable/ allowable values related dimensions. simple Logical; whether return vector outputs list object containing inputs outputs.","code":""},{"path":"https://obrl-soil.github.io/h3jsr/reference/uncompact.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Uncompact H3 cell indices — uncompact","text":"list H3 cell indices chosen resolution.","code":""},{"path":"https://obrl-soil.github.io/h3jsr/reference/uncompact.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Uncompact H3 cell indices — uncompact","text":"","code":"if (FALSE) { # Give me a compacted representation of County Ashe, NC nc <- sf::st_read(system.file(\"shape/nc.shp\", package=\"sf\"), quiet = TRUE) nc1 <- nc[1, ] nc1 <- sf::st_cast(nc1, 'POLYGON') fillers <- polygon_to_cells(geometry = nc1, res = 6) compacted <- compact(fillers) # uncompact to resolution 7 uncompacted <- uncompact(compacted, res = 7) }"},{"path":"https://obrl-soil.github.io/h3jsr/reference/vertex_to_point.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert H3 cell vertex index to point location — vertex_to_point","title":"Convert H3 cell vertex index to point location — vertex_to_point","text":"function takes H3 cell vertex index returns coordinates WGS84.","code":""},{"path":"https://obrl-soil.github.io/h3jsr/reference/vertex_to_point.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert H3 cell vertex index to point location — vertex_to_point","text":"","code":"vertex_to_point(h3_vertex = NULL, simple = TRUE)"},{"path":"https://obrl-soil.github.io/h3jsr/reference/vertex_to_point.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert H3 cell vertex index to point location — vertex_to_point","text":"h3_vertex Character; vertex address addresses. simple Logical; whether return vector outputs data frame containing inputs outputs.","code":""},{"path":"https://obrl-soil.github.io/h3jsr/reference/vertex_to_point.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert H3 cell vertex index to point location — vertex_to_point","text":"default, sfc_POINT object length(h3_address).   EPSG:WGS84.","code":""},{"path":"https://obrl-soil.github.io/h3jsr/reference/vertex_to_point.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert H3 cell vertex index to point location — vertex_to_point","text":"","code":"# Convert this vertex to a point vertex_to_point('246be8d127ffffff') #> Geometry set for 1 feature  #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: 153.039 ymin: -27.51385 xmax: 153.039 ymax: -27.51385 #> Geodetic CRS:  WGS 84 #> POINT (153.039 -27.51385)"},{"path":"https://obrl-soil.github.io/h3jsr/news/index.html","id":"version-13","dir":"Changelog","previous_headings":"","what":"Version 1.3","title":"Version 1.3","text":"point_to_h3() –> point_to_cell() h3_to_point() –> cell_to_point() h3_to_polygon() –> cell_to_polygon() h3_to_line() –> cell_to_line() get_kring() –> get_disk() get_kring_list() –> get_disk_list() polyfill() –> polygon_to_cells() set_to_multipolygon() –> cells_to_multipolygon() res_count() –> num_cells() New functions is_valid_vertex(), get_cell_vertex(), get_cell_vertexes(), vertex_to_point() available interacting H3 vertex mode. New functions cell_to_splitlong() splitlong_to_cell() available converting 64-bit string addresses 32-bit integer pairs. New functions degs_to_rads() rads_to_degs() available unit conversion.","code":""},{"path":"https://obrl-soil.github.io/h3jsr/news/index.html","id":"version-123-cran","dir":"Changelog","previous_headings":"","what":"Version 1.2.3 [CRAN]","title":"Version 1.2.3 [CRAN]","text":"CRAN release: 2022-01-04 Updated V8 version requirement ensure consistent build across platforms","code":""},{"path":"https://obrl-soil.github.io/h3jsr/news/index.html","id":"version-122-cran","dir":"Changelog","previous_headings":"","what":"Version 1.2.2 [CRAN]","title":"Version 1.2.2 [CRAN]","text":"CRAN release: 2021-06-17 Updated h3-js 3.7.2","code":""},{"path":"https://obrl-soil.github.io/h3jsr/news/index.html","id":"version-121","dir":"Changelog","previous_headings":"","what":"Version 1.2.1","title":"Version 1.2.1","text":"Updated h3-js 3.7.1","code":""},{"path":"https://obrl-soil.github.io/h3jsr/news/index.html","id":"version-120","dir":"Changelog","previous_headings":"","what":"Version 1.2.0","title":"Version 1.2.0","text":"Updated h3-js 3.7.0 Added functions cell_area, edge_length, get_dist, get_res0. Revised internal function prep_for_pt2h3","code":""},{"path":"https://obrl-soil.github.io/h3jsr/news/index.html","id":"version-113","dir":"Changelog","previous_headings":"","what":"Version 1.1.3","title":"Version 1.1.3","text":"Updated h3-js 3.6.4","code":""},{"path":"https://obrl-soil.github.io/h3jsr/news/index.html","id":"version-112","dir":"Changelog","previous_headings":"","what":"Version 1.1.2","title":"Version 1.1.2","text":"Updated h3-js 3.6.3 - polyfill algo rolled back due known issues Move Github Actions CI workflow Remove unneeded lwgeom dependency Bugfix accessing h3_info_table library loaded explicitly","code":""},{"path":"https://obrl-soil.github.io/h3jsr/news/index.html","id":"version-111","dir":"Changelog","previous_headings":"","what":"Version 1.1.1","title":"Version 1.1.1","text":"Updated h3-js 3.6.2 - expect improvements polyfill() behaviour","code":""},{"path":"https://obrl-soil.github.io/h3jsr/news/index.html","id":"version-11","dir":"Changelog","previous_headings":"","what":"Version 1.1","title":"Version 1.1","text":"Updated h3-js 3.6.1 Added get_centerchild(), return central child hexagon given resolution. Added get_pentagons(), return twelve pentagon indexes given resolution.","code":""},{"path":"https://obrl-soil.github.io/h3jsr/news/index.html","id":"version-10","dir":"Changelog","previous_headings":"","what":"Version 1.0","title":"Version 1.0","text":"Updated h3-js 3.5.0, now using official browser bundle Added get_faces(), returns icosahedron face(s) given H3 address.","code":""},{"path":"https://obrl-soil.github.io/h3jsr/news/index.html","id":"version-09","dir":"Changelog","previous_headings":"","what":"Version 0.9","title":"Version 0.9","text":"Updated h3-js 3.4.2 Replaced custom function min_path() official version grid_path(), wraps h3Line find path two addresses. Added custom function h3_to_line(), converts vector H3 addresses sfc_LINESTRING.","code":""},{"path":"https://obrl-soil.github.io/h3jsr/news/index.html","id":"version-08","dir":"Changelog","previous_headings":"","what":"Version 0.8","title":"Version 0.8","text":"Updated h3-js 3.3.0 babel-polyfill 6.26.0","code":""},{"path":"https://obrl-soil.github.io/h3jsr/news/index.html","id":"version-07","dir":"Changelog","previous_headings":"","what":"Version 0.7","title":"Version 0.7","text":"Removed nearest_neighbour(), fundamentally flawed. Simplified output get_local_ij() matrix simple = TRUE Improved outputs h3_to_point() Efficiency improvements h3_to_point() polyfill() h3_to_point(), h3_to_polygon(), polyfill() now take wider range input objects.","code":""},{"path":"https://obrl-soil.github.io/h3jsr/news/index.html","id":"version-06","dir":"Changelog","previous_headings":"","what":"Version 0.6","title":"Version 0.6","text":"Update core library v 3.2.0 Add get_local_ij() get_local_h3(), wrapping experimental local coordinate system functions h3.experimentalH3ToLocalIj h3.experimentalLocalIjToH3 respectively.","code":""},{"path":"https://obrl-soil.github.io/h3jsr/news/index.html","id":"version-051","dir":"Changelog","previous_headings":"","what":"Version 0.5.1","title":"Version 0.5.1","text":"Added custom function min_path() find minimum-steps path two H3 addresses resolution. Added custom function nearest_neighbour() find nearest neighbour given set points. Use caution, read notes.","code":""},{"path":"https://obrl-soil.github.io/h3jsr/news/index.html","id":"version-050","dir":"Changelog","previous_headings":"","what":"Version 0.5.0","title":"Version 0.5.0","text":"change v8 session handling (speed enhancement)","code":""},{"path":"https://obrl-soil.github.io/h3jsr/news/index.html","id":"version-045","dir":"Changelog","previous_headings":"","what":"Version 0.4.5","title":"Version 0.4.5","text":"update core library v 3.1.1","code":""},{"path":"https://obrl-soil.github.io/h3jsr/news/index.html","id":"version-044","dir":"Changelog","previous_headings":"","what":"Version 0.4.4","title":"Version 0.4.4","text":"bugfix polyfill(). input sf object geometry column, column called ‘ID_H3’ containing sequential ID field now added sending geometry V8 session.","code":""},{"path":"https://obrl-soil.github.io/h3jsr/news/index.html","id":"version-043","dir":"Changelog","previous_headings":"","what":"Version 0.4.3","title":"Version 0.4.3","text":"Update h3-js release 3.1.0 - https://github.com/uber/h3-js/releases/tag/v3.1.0 Add grid_distance(), returns number ‘steps’ required get one H3 address another (within resolution).","code":""},{"path":"https://obrl-soil.github.io/h3jsr/news/index.html","id":"version-042","dir":"Changelog","previous_headings":"","what":"Version 0.4.2","title":"Version 0.4.2","text":"Update h3-js release 3.0.2 - https://github.com/uber/h3-js/releases/tag/v3.0.2","code":""},{"path":"https://obrl-soil.github.io/h3jsr/news/index.html","id":"version-041","dir":"Changelog","previous_headings":"","what":"Version 0.4.1","title":"Version 0.4.1","text":"Warnings converted messages Multipolygon support h3_polyfill(), plus message output resolution way smaller input extent.","code":""},{"path":"https://obrl-soil.github.io/h3jsr/news/index.html","id":"version-040","dir":"Changelog","previous_headings":"","what":"Version 0.4.0","title":"Version 0.4.0","text":"Naming things hard, vignette time , y’know, now never. Function names shorter now make sense. Added another info utility res_cendist() getting average distance center region represented H3 address given resolution. Vignette covering core functionality added.","code":""},{"path":"https://obrl-soil.github.io/h3jsr/news/index.html","id":"version-031","dir":"Changelog","previous_headings":"","what":"Version 0.3.1","title":"Version 0.3.1","text":"Reworked to_point() return sfc_POINT object, sf point data frame simple = FALSE. Improved outputs to_polygon() similar structure h3_to_geo().","code":""},{"path":"https://obrl-soil.github.io/h3jsr/news/index.html","id":"version-030","dir":"Changelog","previous_headings":"","what":"Version 0.3.0","title":"Version 0.3.0","text":"Reworked point_to_h3() take sf point object return simple = FALSE, resulting new dependency tidyr. upside, one can now request addresses multiple resolutions multiple points, one wishes test limits one’s system.","code":""},{"path":"https://obrl-soil.github.io/h3jsr/news/index.html","id":"version-023","dir":"Changelog","previous_headings":"","what":"Version 0.2.3","title":"Version 0.2.3","text":"Added public informational utilities res_area(), res_edgelen(), res_count() Added data table h3 address info fast retrieval information using functions Fixed resolution validation bug, level 0 now allowed","code":""},{"path":"https://obrl-soil.github.io/h3jsr/news/index.html","id":"version-021","dir":"Changelog","previous_headings":"","what":"Version 0.2.1","title":"Version 0.2.1","text":"polyfill() set_to_multipolygon() added; new dependencies sfand geojsonsf resulted. to_polygon() now returns object sf geometry. compact() uncompact() added, public core algorithms now available.","code":""},{"path":"https://obrl-soil.github.io/h3jsr/news/index.html","id":"version-013","dir":"Changelog","previous_headings":"","what":"Version 0.1.3","title":"Version 0.1.3","text":"Simplified default output behaviour get_parent(), get_children(), get_kring(), get_kring_list(), get_ring() added.","code":""},{"path":"https://obrl-soil.github.io/h3jsr/news/index.html","id":"version-012","dir":"Changelog","previous_headings":"","what":"Version 0.1.2","title":"Version 0.1.2","text":"Added remaining core functions is_valid(), is_pentagon(), is_rc3(), get_base_cell(), get_res(), to_polygon(). unit tests core functions.","code":""},{"path":"https://obrl-soil.github.io/h3jsr/news/index.html","id":"version-011","dir":"Changelog","previous_headings":"","what":"Version 0.1.1","title":"Version 0.1.1","text":"to_point() added. point_to_h3() bugfix. pox devs think y,x ok. NEWS README added.","code":""},{"path":"https://obrl-soil.github.io/h3jsr/news/index.html","id":"version-010","dir":"Changelog","previous_headings":"","what":"Version 0.1.0","title":"Version 0.1.0","text":"point_to_h3() - first function implemented.","code":""}]
